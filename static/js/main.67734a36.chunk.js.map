{"version":3,"sources":["components/Spacing.module.scss","views/Typography.module.scss","views/Home.tsx","components/TextInputExample.tsx","components/SelectInputExample.tsx","components/RadioButtonExample.tsx","components/NumberInputExample.tsx","components/DateInputExample.tsx","components/CheckboxInputExample.tsx","components/ButtonSizeExample.tsx","components/ButtonAppearanceExample.tsx","components/ButtonAppearanceOutlinedExample.tsx","components/ButtonSizeAndAppearanceExample.tsx","views/Typography.tsx","views/About.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","HomePage","TextInputExample","fields","type","name","label","hint","error","value","_fields","undefined","placeholder","inputWidth","cfg","my","onSubmit","console","log","validate","handleSubmit","renderFields","style","display","children","SelectInputExample","required","options","className","Styles","root","RadioButtonExample","initialValues","radioButton","NumberInputExample","DateInputExample","CheckboxInputExample","ButtonSizeExample","size","mr","ButtonAppearanceExample","intent","disabled","ButtonAppearanceOutlinedExample","appearance","ButtonSizeAndAppearanceExample","Typography","componentList","grouping","component","tag","mb","About","target","href","App","logoUrl","title","onClickSchemeOptions","onClickLogout","psr","path","exact","Home","onLinkClickHandler","url","links","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.67734a36.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Spacing_root__179iQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Typography_root__V-BbL\",\"componentList\":\"Typography_componentList__3Xb5C\",\"grouping\":\"Typography_grouping__1nEIs\",\"component\":\"Typography_component__1npUH\"};","import React from 'react';\nimport { H1 } from '@tpr/core';\n\nconst HomePage = () => <H1>Homepage</H1>;\n\nexport default HomePage;\n","import React from 'react';\nimport { Form, validate, renderFields } from '@tpr/forms';\n\nconst TextInputExample = () => {\n  const fields: any[] = [\n    {\n      type: 'text',\n      name: 'event_place',\n      label: 'Event Location',\n      hint: 'The location must be London',\n      error: (value: any, _fields: any) => {\n        return value === 'London' ? undefined : 'Must be London';\n      },\n      placeholder: 'add some text here...',\n      inputWidth: 5,\n      cfg: { my: 5 },\n    },\n    {\n      type: 'text',\n      name: 'event_name',\n      label: 'Event name',\n      error: 'Enter an event name',\n      placeholder: 'add some text here...',\n      inputWidth: 5,\n      cfg: { my: 5 },\n    },\n  ];\n  return (\n    <Form onSubmit={console.log} validate={validate(fields)}>\n      {({ handleSubmit }) => (\n        <form onSubmit={handleSubmit}>\n          {renderFields(fields)}\n          <button type=\"submit\" style={{ display: 'none' }} children=\"Submit\" />\n        </form>\n      )}\n    </Form>\n  );\n};\n\nexport default TextInputExample;\n","import React from 'react';\nimport { FFSelect, Form } from '@tpr/forms';\nimport { P } from '@tpr/core';\nimport Styles from './Spacing.module.scss';\n\nconst SelectInputExample = () => (\n  <div>\n    <Form onSubmit={console.log}>\n      {({ handleSubmit }) => (\n        <form onSubmit={handleSubmit}>\n          <FFSelect\n            required\n            name={'animal'}\n            label=\"Select animal\"\n            hint=\"Please select an animal from the dropdown menu\"\n            options={[\n              { label: 'Seal', value: 1 },\n              { label: 'Warthog', value: 2 },\n              { label: 'kangaroo', value: 3 },\n              { label: 'Guinea Pig', value: 4 },\n            ]}\n          />\n        </form>\n      )}\n    </Form>\n    <P className={Styles.root}>Dropdown boxes can be optional</P>\n    <Form onSubmit={console.log}>\n      {({ handleSubmit }) => (\n        <form onSubmit={handleSubmit}>\n          <FFSelect\n            name={'animal'}\n            label=\"Select animal\"\n            hint=\"Please select an animal from the dropdown menu\"\n            options={[\n              { label: 'Seal', value: 1 },\n              { label: 'Warthog', value: 2 },\n              { label: 'kangaroo', value: 3 },\n              { label: 'Guinea Pig', value: 4 },\n            ]}\n          />\n        </form>\n      )}\n    </Form>\n  </div>\n);\n\nexport default SelectInputExample;\n","import React from 'react';\nimport { Form, FFRadioButton } from '@tpr/forms';\n\nconst RadioButtonExample = () => (\n  <Form onSubmit={console.log} initialValues={{ radioButton: 'value3' }}>\n    {({ handleSubmit }) => (\n      <form onSubmit={handleSubmit}>\n        <FFRadioButton name=\"radioButton\" label=\"option1\" value=\"value1\" />\n        <FFRadioButton\n          name=\"radioButton\"\n          label=\"option2\"\n          value=\"value2\"\n          hint=\"Text can be added to prompt the user\"\n        />\n        <FFRadioButton\n          name=\"radioButton\"\n          label=\"option3\"\n          value=\"value3\"\n          hint=\"One radio button can be preselected\"\n        />\n      </form>\n    )}\n  </Form>\n);\n\nexport default RadioButtonExample;\n","import React from 'react';\nimport { Form, FFInputNumber } from '@tpr/forms';\nimport { P } from '@tpr/core';\nimport Styles from './Spacing.module.scss';\n\nconst NumberInputExample = () => (\n  <div>\n    <P>Number inputs can be optional</P>\n    <Form onSubmit={console.log}>\n      {({ handleSubmit }) => (\n        <form onSubmit={handleSubmit}>\n          <FFInputNumber\n            required\n            name=\"FavNumberEntry\"\n            label=\"What is your favorite number?\"\n          />\n        </form>\n      )}\n    </Form>\n    <P className={Styles.root}>Number inputs can have validation</P>\n    <Form onSubmit={console.log}>\n      {({ handleSubmit }) => (\n        <form onSubmit={handleSubmit}>\n          <FFInputNumber\n            required\n            name=\"FavNumberEntry\"\n            label=\"What is your favorite number?\"\n            hint=\"Your favorite number must be between 0 and 9\"\n            validate={(value) => {\n              if (value < 0 || value > 9 || (!value && value !== 0)) {\n                return 'Must be between 0 and 9';\n              }\n            }}\n          />\n        </form>\n      )}\n    </Form>\n  </div>\n);\n\nexport default NumberInputExample;\n","import React from 'react';\nimport { Form, FFInputDate } from '@tpr/forms';\nimport { P } from '@tpr/core';\nimport Styles from './Spacing.module.scss';\n\nconst DateInputExample = () => (\n  <div>\n    <Form onSubmit={console.log}>\n      {({ handleSubmit }) => (\n        <form onSubmit={handleSubmit}>\n          <FFInputDate required name=\"DoB entry\" label=\"When were you born?\" />\n        </form>\n      )}\n    </Form>\n    <P className={Styles.root}>Date fields can be optional</P>\n    <Form onSubmit={console.log}>\n      {({ handleSubmit }) => (\n        <form onSubmit={handleSubmit}>\n          <FFInputDate name=\"DoB entry\" label=\"When were you born?\" />\n        </form>\n      )}\n    </Form>\n  </div>\n);\n\nexport default DateInputExample;\n","import React from 'react';\nimport { Form, FFCheckbox } from '@tpr/forms';\n\nconst CheckboxInputExample = () => (\n  <Form onSubmit={console.log} initialValues={{ 'checkbox-c': true }}>\n    {({ handleSubmit }) => (\n      <form onSubmit={handleSubmit}>\n        <FFCheckbox name=\"checkbox-a\" label=\"Option 1\" />\n        <FFCheckbox\n          name=\"checkbox-b\"\n          label=\"Option 2\"\n          hint=\"Text can be added to prompt the user\"\n        />\n        <FFCheckbox\n          name=\"checkbox-c\"\n          label=\"Option 3\"\n          hint=\"Checkboxes can be preselected\"\n        />\n      </form>\n    )}\n  </Form>\n);\n\nexport default CheckboxInputExample;\n","import React from 'react';\nimport { Button } from '@tpr/core';\n\nconst ButtonSizeExample = () => (\n  <div>\n    <Button size=\"large\" cfg={{ mr: 3 }}>\n      Large\n    </Button>\n    <Button size=\"medium\" cfg={{ mr: 3 }}>\n      Medium\n    </Button>\n    <Button size=\"small\" cfg={{ mr: 3 }}>\n      Small\n    </Button>\n  </div>\n);\n\nexport default ButtonSizeExample;\n","import React from 'react';\nimport { Button } from '@tpr/core';\n\nconst ButtonAppearanceExample = () => (\n  <div>\n    <Button intent=\"none\" cfg={{ mr: 3 }}>\n      Submit\n    </Button>\n    <Button intent=\"success\" cfg={{ mr: 3 }}>\n      Success\n    </Button>\n    <Button intent=\"danger\" cfg={{ mr: 3 }}>\n      Danger\n    </Button>\n    <Button intent=\"warning\" cfg={{ mr: 3 }}>\n      Warning\n    </Button>\n    <Button intent=\"special\" cfg={{ mr: 3 }}>\n      Special\n    </Button>\n    <Button intent=\"special\" cfg={{ mr: 3 }} disabled>\n      Disabled\n    </Button>\n  </div>\n);\n\nexport default ButtonAppearanceExample;\n","import React from 'react';\nimport { Button } from '@tpr/core';\n\nconst ButtonAppearanceOutlinedExample = () => (\n  <div>\n    <Button appearance=\"outlined\" intent=\"none\" cfg={{ mr: 3 }}>\n      Submit\n    </Button>\n    <Button appearance=\"outlined\" intent=\"success\" cfg={{ mr: 3 }}>\n      Success\n    </Button>\n    <Button appearance=\"outlined\" intent=\"danger\" cfg={{ mr: 3 }}>\n      Danger\n    </Button>\n    <Button appearance=\"outlined\" intent=\"warning\" cfg={{ mr: 3 }}>\n      Warning\n    </Button>\n    <Button appearance=\"outlined\" intent=\"special\" cfg={{ mr: 3 }}>\n      Special\n    </Button>\n    <Button appearance=\"outlined\" intent=\"special\" cfg={{ mr: 3 }} disabled>\n      Disabled\n    </Button>\n  </div>\n);\n\nexport default ButtonAppearanceOutlinedExample;\n","import React from 'react';\nimport { Button } from '@tpr/core';\n\nconst ButtonSizeAndAppearanceExample = () => (\n  <div>\n    <Button size=\"large\" appearance=\"outlined\" intent=\"none\" cfg={{ mr: 3 }}>\n      Large\n    </Button>\n    <Button\n      size=\"medium\"\n      appearance=\"outlined\"\n      intent=\"success\"\n      cfg={{ mr: 3 }}\n    >\n      Medium\n    </Button>\n    <Button size=\"small\" appearance=\"outlined\" intent=\"danger\" cfg={{ mr: 3 }}>\n      Small\n    </Button>\n    <Button size=\"large\" appearance=\"outlined\" intent=\"warning\" cfg={{ mr: 3 }}>\n      Large\n    </Button>\n    <Button\n      size=\"medium\"\n      appearance=\"outlined\"\n      intent=\"special\"\n      cfg={{ mr: 3 }}\n    >\n      Medium\n    </Button>\n    <Button\n      size=\"small\"\n      appearance=\"outlined\"\n      intent=\"special\"\n      cfg={{ mr: 3 }}\n      disabled\n    >\n      Small\n    </Button>\n  </div>\n);\n\nexport default ButtonSizeAndAppearanceExample;\n","import React from 'react';\nimport { H1, H2, H3, H4, H5, H6, P, Span, Text, Hr } from '@tpr/core';\nimport Styles from './Typography.module.scss';\nimport TextInputExample from '../components/TextInputExample';\nimport SelectInputExample from '../components/SelectInputExample';\nimport RadioButtonExample from '../components/RadioButtonExample';\nimport NumberInputExample from '../components/NumberInputExample';\nimport DateInputExample from '../components/DateInputExample';\nimport CheckboxInputExample from '../components/CheckboxInputExample';\nimport ButtonSizeExample from '../components/ButtonSizeExample';\nimport ButtonAppearanceExample from '../components/ButtonAppearanceExample';\nimport ButtonAppearanceOutlinedExample from '../components/ButtonAppearanceOutlinedExample';\nimport ButtonSizeAndAppearanceExample from '../components/ButtonSizeAndAppearanceExample';\n\nconst Typography = () => (\n  <div className={Styles.root}>\n    <div className={Styles.componentList}>\n      <H1>Component List</H1>\n      <div>\n        <H2>Typography</H2>\n        <div>\n          <div className={Styles.grouping}>\n            <H3>Headings</H3>\n            <div className={Styles.component}>\n              <H1>This is a h1 component</H1>\n              <Hr />\n            </div>\n            <div className={Styles.component}>\n              <H2>This is a h2 component</H2>\n              <Hr />\n            </div>\n            <div className={Styles.component}>\n              <H3>This is a H3 component</H3>\n              <Hr />\n            </div>\n            <div className={Styles.component}>\n              <H4>This is a H4 component</H4>\n              <Hr />\n            </div>\n            <div className={Styles.component}>\n              <H5>This is a H5 component</H5>\n              <Hr />\n            </div>\n            <div className={Styles.component}>\n              <H6>This is a H6 component</H6>\n              <Hr />\n            </div>\n          </div>\n          <div className={Styles.grouping}>\n            <H3>Text</H3>\n            <div className={Styles.component}>\n              <P>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed\n                lacinia interdum lectus. Quisque luctus metus non arcu lacinia,\n                a scelerisque elit porta. Etiam auctor vel urna vitae tristique.\n                Mauris vel urna semper, sagittis magna nec, consectetur est.\n                Phasellus pulvinar, nulla volutpat posuere tristique, purus\n                lorem consequat mi, a vestibulum diam erat et velit. Duis nec\n                faucibus tortor. Ut varius erat nec nisl mollis ultrices eu\n                sollicitudin turpis. Proin vulputate purus sit amet varius\n                posuere.\n              </P>\n              <P>This is a P component</P>\n            </div>\n            <div className={Styles.component}>\n              <Span>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed\n                lacinia interdum lectus. Quisque luctus metus non arcu lacinia,\n                a scelerisque elit porta. Etiam auctor vel urna vitae tristique.\n                Mauris vel urna semper, sagittis magna nec, consectetur est.\n                Phasellus pulvinar, nulla volutpat posuere tristique, purus\n                lorem consequat mi, a vestibulum diam erat et velit. Duis nec\n                faucibus tortor. Ut varius erat nec nisl mollis ultrices eu\n                sollicitudin turpis. Proin vulputate purus sit amet varius\n                posuere.\n              </Span>\n              <P>This is a Span component</P>\n            </div>\n            <div className={Styles.component}>\n              <Text tag=\"p\">\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed\n                lacinia interdum lectus. Quisque luctus metus non arcu lacinia,\n                a scelerisque elit porta. Etiam auctor vel urna vitae tristique.\n                Mauris vel urna semper, sagittis magna nec, consectetur est.\n                Phasellus pulvinar, nulla volutpat posuere tristique, purus\n                lorem consequat mi, a vestibulum diam erat et velit. Duis nec\n                faucibus tortor. Ut varius erat nec nisl mollis ultrices eu\n                sollicitudin turpis. Proin vulputate purus sit amet varius\n                posuere.\n              </Text>\n              <P>This is a Text component</P>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div>\n        <H2>Forms</H2>\n        <div className={Styles.grouping}>\n          <H3>Checkbox Input</H3>\n          <div className={Styles.component}>\n            <CheckboxInputExample />\n          </div>\n        </div>\n        <div className={Styles.grouping}>\n          <H3>Date Input</H3>\n          <div className={Styles.component}>\n            <DateInputExample />\n          </div>\n        </div>\n        <div className={Styles.grouping}>\n          <H3>Number Input</H3>\n          <div className={Styles.component}>\n            <NumberInputExample />\n          </div>\n        </div>\n        <div className={Styles.grouping}>\n          <H3 cfg={{ mb: 3 }}>Radiobutton</H3>\n          <div className={Styles.component}>\n            <RadioButtonExample />\n          </div>\n        </div>\n        <div className={Styles.grouping}>\n          <H3>Dropdown Menu</H3>\n          <div className={Styles.component}>\n            <SelectInputExample />\n          </div>\n        </div>\n        <div className={Styles.grouping}>\n          <H3>Text Input</H3>\n          <div className={Styles.component}>\n            <TextInputExample />\n          </div>\n        </div>\n      </div>\n      <H2>Buttons</H2>\n      <div className={Styles.grouping}>\n        <H3>Different Sizes</H3>\n        <div className={Styles.component}>\n          <ButtonSizeExample />\n        </div>\n        <H3>Different Appearances</H3>\n        <div className={Styles.component}>\n          <ButtonAppearanceExample />\n        </div>\n        <H3>Different Appearances Outlined</H3>\n        <div className={Styles.component}>\n          <ButtonAppearanceOutlinedExample />\n        </div>\n        <H3>Combining Size and Appearance</H3>\n        <div className={Styles.component}>\n          <ButtonSizeAndAppearanceExample />\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nexport default Typography;\n","import React from 'react';\nimport { H1, Link } from '@tpr/core';\n\nconst About = () => (\n  <div>\n    <H1>About Page</H1>\n    <Link>\n      <a target=\"_blanks\" href=\"https://tpr.netlify.app/\">\n        TPR React Components\n      </a>\n    </Link>\n  </div>\n);\n\nexport default About;\n","import React from 'react';\nimport { Header, Footer, Highlight } from '@tpr/layout';\nimport { Route, Switch } from 'react-router-dom';\nimport HomePage from './views/Home';\nimport Typography from './views/Typography';\nimport About from './views/About';\n\nfunction App() {\n  return (\n    <div>\n      <Header\n        logoUrl={\n          'https://www.thepensionsregulator.gov.uk/-/media/thepensionsregulator/images/logo/tpr-logo-header.ashx'\n        }\n        title={'User Research'}\n        onClickSchemeOptions={() => {\n          console.log('Scheme Options clicked');\n        }}\n        onClickLogout={() => {\n          console.log('Logout clicked');\n        }}\n      />\n      <Highlight name={'Scheme Name'} psr={'012161'} />\n      <Switch>\n        <Route path=\"/\" exact component={() => <HomePage />} />\n        <Route path=\"/typography\" component={() => <Typography />} />\n        <Route path=\"/about\" component={() => <About />} />\n      </Switch>\n      <Footer\n        logoUrl=\"https://www.thepensionsregulator.gov.uk/-/media/thepensionsregulator/images/logo/tpr-logo-footer.ashx\"\n        onLinkClickHandler={(url) => console.log(`navigate to ${url}`)}\n        links={[\n          { title: 'Website help', url: 'link-1' },\n          { title: 'Cymraeg', url: 'link-2' },\n          { title: 'Site map', url: 'link-3' },\n        ]}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.module.scss';\nimport ThemeProvider from '@tpr/theming';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider>\n      <Router basename=\"/userresearch\">\n        <App />\n      </Router>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}