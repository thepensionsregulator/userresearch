{"version":3,"sources":["components/UL.module.scss","views/S179/s179.module.scss","views/Typography.module.scss","components/ScrollToTop.tsx","components/SidebarContext.tsx","components/UserResearchSidebar.tsx","components/LI.tsx","components/UL.tsx","views/Home.tsx","components/TextInputExample.tsx","components/SelectInputExample.tsx","components/RadioButtonExample.tsx","components/NumberInputExample.tsx","components/DateInputExample.tsx","components/CheckboxInputExample.tsx","components/ButtonSizeExample.tsx","components/ButtonAppearanceExample.tsx","components/ButtonAppearanceOutlinedExample.tsx","components/ButtonSizeAndAppearanceExample.tsx","views/Typography.tsx","views/About.tsx","views/InitialQuestions.tsx","views/WoundUpConfirmation.tsx","views/SchemeWoundUp.tsx","StateContext.tsx","views/SchemeStatusAndMembership.tsx","views/ElectronicComsConsent.tsx","components/AddressForm/AddressConfirmation.tsx","components/AddressForm/AddressSelect.tsx","components/AddressForm/PostcodeSearch.tsx","views/SchemeNameAndAddress.tsx","components/AddTrusteeLink.tsx","services/TrusteeRepository.ts","views/Trustees.tsx","views/AddIndividualTrustee/IndividualTrusteeStepFour.tsx","views/AddIndividualTrustee/IndividualTrusteeStepOne.tsx","views/AddIndividualTrustee/IndividualTrusteeStepTwo.tsx","components/AddressForm/AddressContext.tsx","components/AddressForm/AddressProvider.tsx","views/AddIndividualTrustee/IndividualTrusteeStepThree.tsx","views/AddIndividualTrustee/IndividualTrusteeStepZero.tsx","views/AddTrustee.tsx","views/S179/Services/S179Context.ts","views/S179/Assets/Assets.tsx","views/S179/EffectiveDate/EffectiveDate.tsx","views/S179/GuidanceAndAssumptions/GuidanceAndAssumptions.tsx","views/S179/views/Step1.tsx","views/S179/Liabilities/Liabilities.tsx","views/S179/ProportionOfLiabilities/ProportionOfLiabilities.tsx","views/S179/views/Step2.tsx","views/S179/BespokeInvestment/BespokeInvestment.tsx","views/S179/views/Step3.tsx","views/S179/S179.tsx","App.tsx","serviceWorker.ts","StateProvider.tsx","components/SidebarContextProvider.tsx","index.tsx","views/S179/Liabilities/Liabilities.module.scss","views/S179/ProportionOfLiabilities/ProportionOfLiabilities.module.scss","components/Spacing.module.scss","views/Layout.module.scss"],"names":["module","exports","ScrollToTop","className","Styles","backToTop","iconSide","pointsTo","onClick","window","scrollTo","top","behavior","cfg","mr","title","SidebarContext","React","createContext","state","dispatch","UserResearchSidebar","history","useHistory","location","useLocation","useContext","sectionCompleteLabel","sectionIncompleteLabel","titlePath","matchPath","sections","order","links","name","completed","path","LI","props","children","UL","root","listItems","map","item","index","key","HomePage","main","mb","importantMessage","mt","tag","my","to","console","log","underline","TextInputExample","fields","type","label","hint","error","value","_fields","undefined","placeholder","inputWidth","onSubmit","validate","handleSubmit","renderFields","style","display","SelectInputExample","required","options","RadioButtonExample","initialValues","radioButton","NumberInputExample","DateInputExample","CheckboxInputExample","ButtonSizeExample","size","ButtonAppearanceExample","intent","disabled","ButtonAppearanceOutlinedExample","appearance","ButtonSizeAndAppearanceExample","Typography","componentList","grouping","component","About","target","href","InitialQuestions","formValues","push","schemeWoundUp","pristine","radioButtons","WoundUpConfirmation","confirmationInfoBox","SchemeWoundUp","goBack","warningBox","StateContext","psr","setPsr","newPsr","schemeName","setSchemeName","schemeAddress","addressLine1","addressLine2","addressLine3","postTown","county","postcode","country","countryId","setSchemeAddress","address","activeMembers","setActiveMembers","deferredMembers","setDeferredMembers","membershipEffective","Date","setMembershipEffective","newDate","pensionerMembers","setPensionerMembers","schemeStatus","setSchemeStatus","schemeStatusApplied","setSchemeStatusApplied","totalMembers","setTotalMembers","electronicConsent","setElectronicConsent","SchemeStatusAndMembership","appState","SchemeStatusFields","SchemeMembershipFields","values","dateMembershipEffective","bg","p","valueDate","dateUpperBound","ElectronicComsConsent","flexDirection","AddressConfirmation","addressFields","helpText","justifyContent","changeAddress","AddressSelect","changePostcode","isPristine","PostcodeSearch","text","SchemeNameAndAddress","useState","step","setStep","submitAddressConfirmation","addressSelect","submitAddressSelect","warn","postcodeSearch","DisplayForm","AddTrusteeLink","trustee","toWrite","id","this","getRandomInt","toString","effectiveDate","schemeRoleId","Data","trustees","result","find","x","trusteeToRemove","findIndex","splice","trusteeToUpdate","maxInt","Math","floor","random","Trustees","TrusteeRepository","GetAllTrustees","setTrustees","correctTrusteeDetails","setCorrectTrusteeDetails","removeTrustee","RemoveTrustee","search","Promise","resolve","updateTrustee","UpdateTrustee","updateDetails","updateContact","updateAddress","length","onDetailsSave","onContactSave","onAddressSave","onRemove","onCorrect","addressAPI","get","endpoint","data","results","format","locality","province","postalCode","limit","preValidatedData","complete","i18n","preview","buttons","one","two","three","four","checkboxLabel","IndividualTrusteeStepFour","WriteTrustee","newTrustee","pathname","valid","IndividualTrusteeStepOne","setNewTrustee","nextPage","hasValidationErrors","IndividualTrusteeStepTwo","pointTo","AddressContext","setAddressLine1","setAddressLine2","setAddressLine3","setPostTown","setCounty","setPostcode","setCountry","AddressProvider","Provider","IndividualTrusteeStepThree","setAddress","onPostCodeSearchSubmit","onAddressSelectSubmit","onAddressConfirmationSubmit","IndividualTrusteeStepZero","AddTrustee","setState","renderForm","S179Context","setData","Assets","dateOfRelevantAccounts","before","toLocaleDateString","after","EffectiveDate","handleNewS179","GuidanceAndAssumptions","guidance","assumption","Step1","handleNextClick","s179Context","relevantAccounts","Liabilities","ml","pt","styles","columns","firstColumn","fontSize","fontWeight","pl","pr","secondColumn","thirdColumn","forthColumn","ProportionOfLiabilities","activeTotal","setActiveTotal","deferredTotal","setDeferredTotal","pensionerTotal","setPensionerTotal","ActivePre1997","setActivePre1997","ActivePreApril2009","ActivePre2009","setActivePre2009","ActivePostApril2009","ActivePost2009","setActivePost2009","DeferredPre1997","setDeferredPre1997","DeferredPreApril2009","DeferredPre2009","setDeferredPre2009","DeferredPostApril2009","DeferredPost2009","setDeferredPost2009","PensionersPre1997","PensionerPre1997","setPensionerPre1997","PensionerPost1997","PensionerPost2009","setPensionerPost2009","useEffect","Number","rowTitle","callback","event","isNaN","flex","Step2","BespokeInvestment","Step3","S179","currentStep","TotalValue","PercentageOfAssets","ActiveLiabilities","ActiveInsurer","ActiveNumber","ActiveAge","DeferredLiabilities","DeferredInsurer","DeferredNumber","DeferredAge","PensionerLiabilities","PensionerInsurer","PensionerNumber","PensionerAge","WindingUpLiabilities","ExternalLiabilities","BenefitLiabilities","TotalProtectedLiabilities","initialData","setInitialData","px","pb","color","sectionTitle","selectHeading","selectForm","App","AppState","logoHref","logoSrc","schemeOptionsHref","onClickLogout","exact","Home","logoUrl","url","Boolean","hostname","match","StateProvider","SidebarProvider","sectionCompletedState","Array","fill","useReducer","action","ReactDOM","render","StrictMode","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.f624971d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"UL_root__25pYY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionTitle\":\"s179_sectionTitle__mFGde\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Typography_root__V-BbL\",\"componentList\":\"Typography_componentList__3Xb5C\",\"grouping\":\"Typography_grouping__1nEIs\",\"component\":\"Typography_component__1npUH\"};","import React from 'react';\nimport Styles from '../views/Layout.module.scss';\nimport { ArrowLink } from '@tpr/layout';\n\nconst ScrollToTop = () => {\n  return (\n    <div className={Styles.backToTop}>\n      <ArrowLink\n        iconSide=\"left\"\n        pointsTo=\"up\"\n        onClick={() => window.scrollTo({ top: 0, behavior: 'smooth' })}\n        cfg={{ mr: 3 }}\n        title=\"Back to top\"\n      />\n    </div>\n  );\n};\n\nexport default ScrollToTop;\n","import React, { Dispatch } from 'react';\n\nexport type Actions =\n  | { type: 'COMPLETE'; index: number }\n  | { type: 'INCOMPLETE'; index: number };\n\nconst SidebarContext = React.createContext<{\n  state: any[];\n  dispatch: Dispatch<Actions>;\n}>({ state: [], dispatch: () => null });\n\nexport default SidebarContext;\n","import React, { useContext } from 'react';\nimport { Sidebar } from '@tpr/layout';\nimport { useLocation, useHistory, matchPath } from 'react-router-dom';\nimport SidebarContext from './SidebarContext';\n\nconst UserResearchSidebar = () => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const { state } = useContext(SidebarContext);\n\n  return (\n    <Sidebar\n      sectionCompleteLabel=\"x\"\n      sectionIncompleteLabel=\"y\"\n      history={history}\n      location={location}\n      title={'Scheme return home'}\n      titlePath={'/'}\n      matchPath={matchPath}\n      sections={[\n        {\n          title: 'Scheme details',\n          order: 1,\n          links: [\n            {\n              name: 'Scheme name and address',\n              completed: state[0],\n              path: '/scheme-name-and-address',\n            },\n            {\n              name: 'Scheme status and membership',\n              completed: state[1],\n              path: '/scheme-status-and-membership',\n            },\n            {\n              name: 'Consent to electronic communication',\n              completed: state[2],\n              path: '/consent-to-electronic-communication',\n            },\n          ],\n        },\n        {\n          title: 'Role',\n          order: 2,\n          links: [\n            {\n              name: 'Trustee details',\n              completed: state[3],\n              path: '/trustees',\n            },\n            {\n              name: 'Employer details',\n              completed: state[4],\n              path: '/employer-details',\n            },\n            {\n              name: 'Service provider details',\n              completed: state[5],\n              path: '/service-provider-details',\n            },\n            {\n              name: 'Named contact details',\n              completed: state[6],\n              path: '/named-contact-details',\n            },\n          ],\n        },\n        {\n          title: 'Financial Details',\n          order: 3,\n          links: [{ name: 'S179 Valuation', completed: false, path: '/s179' }],\n        },\n        {\n          title: 'Finish Up',\n          order: 4,\n          links: [\n            {\n              name: 'Review and submit',\n              completed: state[7],\n              path: '/review-and-submit',\n            },\n          ],\n        },\n      ]}\n    />\n  );\n};\n\nexport default UserResearchSidebar;\n","import React from 'react';\n\nconst LI = (props: any) => <li>{props.children}</li>;\n\nexport default LI;\n","import React from 'react';\nimport LI from './LI';\nimport Styles from './UL.module.scss';\n\nconst UL = (props: any) => (\n  <ul className={Styles.root}>\n    {props.listItems.map((item: any, index: number) => (\n      <LI key={index}>{item}</LI>\n    ))}\n  </ul>\n);\n\nexport default UL;\n","import React from 'react';\nimport { H1, Hr, H2, P, Flex, Link } from '@tpr/core';\nimport { ArrowButton, ArrowLink, Info } from '@tpr/layout';\nimport Styles from './Layout.module.scss';\nimport ScrollToTop from '../components/ScrollToTop';\nimport UserResearchSidebar from '../components/UserResearchSidebar';\nimport { Link as RouterLink } from 'react-router-dom';\nimport UL from '../components/UL';\n\nconst HomePage = () => (\n  <div className={Styles.root}>\n    <UserResearchSidebar />\n    <div className={Styles.main}>\n      <H1 cfg={{ mb: 6 }}>Scheme Return</H1>\n      <Hr cfg={{ mb: 10 }} />\n      <Info title=\"Due Date\" importantMessage=\"Important\">\n        <P cfg={{ mb: 1 }}>The scheme return for this scheme is due.</P>\n        <P cfg={{ mt: 2 }}>\n          You must submit the completed scheme return by\n          <P tag=\"b\"> 31 October 2020</P>.\n        </P>\n      </Info>\n      <Flex cfg={{ my: 6 }}>\n        <RouterLink to=\"/scheme-name-and-address\">\n          <ArrowButton\n            title=\"Start\"\n            pointsTo=\"right\"\n            iconSide=\"right\"\n            cfg={{ mr: 3 }}\n          />\n        </RouterLink>\n        <ArrowLink\n          title=\"View current and previous scheme returns\"\n          pointsTo=\"right\"\n          iconSide=\"right\"\n          onClick={() => {\n            console.log('redirecting to Documents available page');\n          }}\n        />\n      </Flex>\n      <Hr cfg={{ mt: 6 }} />\n      <H2 cfg={{ mt: 9 }}>Before you start</H2>\n      <P cfg={{ mt: 4 }}>\n        Make sure you have the following information to hand:\n      </P>\n      <UL\n        listItems={[\n          'scheme trust deed and rules',\n          'last actuarial valuation',\n          'most recent report and scheme accounts',\n          <div>\n            <Link underline onClick={() => console.log('handling on click')}>\n              DB return scheme checklist\n            </Link>{' '}\n            {'(opens in a new window)'}\n          </div>,\n        ]}\n      />\n      <P cfg={{ mt: 4 }}>\n        Check if there are any changes to the names or contact details of:\n      </P>\n      <UL\n        listItems={[\n          'trustees',\n          'employers',\n          'service providers',\n          'scheme return contracts',\n        ]}\n      />\n      <Hr cfg={{ my: 5 }} />\n      <ScrollToTop />\n    </div>\n  </div>\n);\n\nexport default HomePage;\n","import React from 'react';\nimport { Form, validate, renderFields } from '@tpr/forms';\n\nconst TextInputExample = () => {\n  const fields: any[] = [\n    {\n      type: 'text',\n      name: 'event_place',\n      label: 'Event Location',\n      hint: 'The location must be London',\n      error: (value: any, _fields: any) => {\n        return value === 'London' ? undefined : 'Must be London';\n      },\n      placeholder: 'add some text here...',\n      inputWidth: 5,\n      cfg: { my: 5 },\n    },\n    {\n      type: 'text',\n      name: 'event_name',\n      label: 'Event name',\n      error: 'Enter an event name',\n      placeholder: 'add some text here...',\n      inputWidth: 5,\n      cfg: { my: 5 },\n    },\n  ];\n  return (\n    <Form onSubmit={console.log} validate={validate(fields)}>\n      {({ handleSubmit }) => (\n        <form onSubmit={handleSubmit}>\n          {renderFields(fields)}\n          <button type=\"submit\" style={{ display: 'none' }} children=\"Submit\" />\n        </form>\n      )}\n    </Form>\n  );\n};\n\nexport default TextInputExample;\n","import React from 'react';\nimport { FFSelect, Form } from '@tpr/forms';\nimport { P } from '@tpr/core';\nimport Styles from './Spacing.module.scss';\n\nconst SelectInputExample = () => (\n  <div>\n    <Form onSubmit={console.log}>\n      {({ handleSubmit }) => (\n        <form onSubmit={handleSubmit}>\n          <FFSelect\n            required\n            name={'animal'}\n            label=\"Select animal\"\n            hint=\"Please select an animal from the dropdown menu\"\n            options={[\n              { label: 'Seal', value: 1 },\n              { label: 'Warthog', value: 2 },\n              { label: 'kangaroo', value: 3 },\n              { label: 'Guinea Pig', value: 4 },\n            ]}\n          />\n        </form>\n      )}\n    </Form>\n    <P className={Styles.root}>Dropdown boxes can be optional</P>\n    <Form onSubmit={console.log}>\n      {({ handleSubmit }) => (\n        <form onSubmit={handleSubmit}>\n          <FFSelect\n            name={'animal'}\n            label=\"Select animal\"\n            hint=\"Please select an animal from the dropdown menu\"\n            options={[\n              { label: 'Seal', value: 1 },\n              { label: 'Warthog', value: 2 },\n              { label: 'kangaroo', value: 3 },\n              { label: 'Guinea Pig', value: 4 },\n            ]}\n          />\n        </form>\n      )}\n    </Form>\n  </div>\n);\n\nexport default SelectInputExample;\n","import React from 'react';\nimport { Form, FFRadioButton } from '@tpr/forms';\n\nconst RadioButtonExample = () => (\n  <Form onSubmit={console.log} initialValues={{ radioButton: 'value3' }}>\n    {({ handleSubmit }) => (\n      <form onSubmit={handleSubmit}>\n        <FFRadioButton name=\"radioButton\" label=\"option1\" value=\"value1\" />\n        <FFRadioButton\n          name=\"radioButton\"\n          label=\"option2\"\n          value=\"value2\"\n          hint=\"Text can be added to prompt the user\"\n        />\n        <FFRadioButton\n          name=\"radioButton\"\n          label=\"option3\"\n          value=\"value3\"\n          hint=\"One radio button can be preselected\"\n        />\n      </form>\n    )}\n  </Form>\n);\n\nexport default RadioButtonExample;\n","import React from 'react';\nimport { Form, FFInputNumber } from '@tpr/forms';\nimport { P } from '@tpr/core';\nimport Styles from './Spacing.module.scss';\n\nconst NumberInputExample = () => (\n  <div>\n    <P>Number inputs can be optional</P>\n    <Form onSubmit={console.log}>\n      {({ handleSubmit }) => (\n        <form onSubmit={handleSubmit}>\n          <FFInputNumber\n            required\n            name=\"FavNumberEntry\"\n            label=\"What is your favorite number?\"\n          />\n        </form>\n      )}\n    </Form>\n    <P className={Styles.root}>Number inputs can have validation</P>\n    <Form onSubmit={console.log}>\n      {({ handleSubmit }) => (\n        <form onSubmit={handleSubmit}>\n          <FFInputNumber\n            required\n            name=\"FavNumberEntry\"\n            label=\"What is your favorite number?\"\n            hint=\"Your favorite number must be between 0 and 9\"\n            validate={(value) => {\n              if (value < 0 || value > 9 || (!value && value !== 0)) {\n                return 'Must be between 0 and 9';\n              }\n            }}\n          />\n        </form>\n      )}\n    </Form>\n  </div>\n);\n\nexport default NumberInputExample;\n","import React from 'react';\nimport { Form, FFInputDate } from '@tpr/forms';\nimport { P } from '@tpr/core';\nimport Styles from './Spacing.module.scss';\n\nconst DateInputExample = () => (\n  <div>\n    <Form onSubmit={console.log}>\n      {({ handleSubmit }) => (\n        <form onSubmit={handleSubmit}>\n          <FFInputDate required name=\"DoB entry\" label=\"When were you born?\" />\n        </form>\n      )}\n    </Form>\n    <P className={Styles.root}>Date fields can be optional</P>\n    <Form onSubmit={console.log}>\n      {({ handleSubmit }) => (\n        <form onSubmit={handleSubmit}>\n          <FFInputDate name=\"DoB entry\" label=\"When were you born?\" />\n        </form>\n      )}\n    </Form>\n  </div>\n);\n\nexport default DateInputExample;\n","import React from 'react';\nimport { Form, FFCheckbox } from '@tpr/forms';\n\nconst CheckboxInputExample = () => (\n  <Form onSubmit={console.log} initialValues={{ 'checkbox-c': true }}>\n    {({ handleSubmit }) => (\n      <form onSubmit={handleSubmit}>\n        <FFCheckbox name=\"checkbox-a\" label=\"Option 1\" />\n        <FFCheckbox\n          name=\"checkbox-b\"\n          label=\"Option 2\"\n          hint=\"Text can be added to prompt the user\"\n        />\n        <FFCheckbox\n          name=\"checkbox-c\"\n          label=\"Option 3\"\n          hint=\"Checkboxes can be preselected\"\n        />\n      </form>\n    )}\n  </Form>\n);\n\nexport default CheckboxInputExample;\n","import React from 'react';\nimport { Button } from '@tpr/core';\n\nconst ButtonSizeExample = () => (\n  <div>\n    <Button size=\"large\" cfg={{ mr: 3 }}>\n      Large\n    </Button>\n    <Button size=\"medium\" cfg={{ mr: 3 }}>\n      Medium\n    </Button>\n    <Button size=\"small\" cfg={{ mr: 3 }}>\n      Small\n    </Button>\n  </div>\n);\n\nexport default ButtonSizeExample;\n","import React from 'react';\nimport { Button } from '@tpr/core';\n\nconst ButtonAppearanceExample = () => (\n  <div>\n    <Button intent=\"none\" cfg={{ mr: 3 }}>\n      Submit\n    </Button>\n    <Button intent=\"success\" cfg={{ mr: 3 }}>\n      Success\n    </Button>\n    <Button intent=\"danger\" cfg={{ mr: 3 }}>\n      Danger\n    </Button>\n    <Button intent=\"warning\" cfg={{ mr: 3 }}>\n      Warning\n    </Button>\n    <Button intent=\"special\" cfg={{ mr: 3 }}>\n      Special\n    </Button>\n    <Button intent=\"special\" cfg={{ mr: 3 }} disabled>\n      Disabled\n    </Button>\n  </div>\n);\n\nexport default ButtonAppearanceExample;\n","import React from 'react';\nimport { Button } from '@tpr/core';\n\nconst ButtonAppearanceOutlinedExample = () => (\n  <div>\n    <Button appearance=\"outlined\" intent=\"none\" cfg={{ mr: 3 }}>\n      Submit\n    </Button>\n    <Button appearance=\"outlined\" intent=\"success\" cfg={{ mr: 3 }}>\n      Success\n    </Button>\n    <Button appearance=\"outlined\" intent=\"danger\" cfg={{ mr: 3 }}>\n      Danger\n    </Button>\n    <Button appearance=\"outlined\" intent=\"warning\" cfg={{ mr: 3 }}>\n      Warning\n    </Button>\n    <Button appearance=\"outlined\" intent=\"special\" cfg={{ mr: 3 }}>\n      Special\n    </Button>\n    <Button appearance=\"outlined\" intent=\"special\" cfg={{ mr: 3 }} disabled>\n      Disabled\n    </Button>\n  </div>\n);\n\nexport default ButtonAppearanceOutlinedExample;\n","import React from 'react';\nimport { Button } from '@tpr/core';\n\nconst ButtonSizeAndAppearanceExample = () => (\n  <div>\n    <Button size=\"large\" appearance=\"outlined\" intent=\"none\" cfg={{ mr: 3 }}>\n      Large\n    </Button>\n    <Button\n      size=\"medium\"\n      appearance=\"outlined\"\n      intent=\"success\"\n      cfg={{ mr: 3 }}\n    >\n      Medium\n    </Button>\n    <Button size=\"small\" appearance=\"outlined\" intent=\"danger\" cfg={{ mr: 3 }}>\n      Small\n    </Button>\n    <Button size=\"large\" appearance=\"outlined\" intent=\"warning\" cfg={{ mr: 3 }}>\n      Large\n    </Button>\n    <Button\n      size=\"medium\"\n      appearance=\"outlined\"\n      intent=\"special\"\n      cfg={{ mr: 3 }}\n    >\n      Medium\n    </Button>\n    <Button\n      size=\"small\"\n      appearance=\"outlined\"\n      intent=\"special\"\n      cfg={{ mr: 3 }}\n      disabled\n    >\n      Small\n    </Button>\n  </div>\n);\n\nexport default ButtonSizeAndAppearanceExample;\n","import React from 'react';\nimport { H1, H2, H3, H4, H5, H6, P, Span, Text, Hr } from '@tpr/core';\nimport Styles from './Typography.module.scss';\nimport TextInputExample from '../components/TextInputExample';\nimport SelectInputExample from '../components/SelectInputExample';\nimport RadioButtonExample from '../components/RadioButtonExample';\nimport NumberInputExample from '../components/NumberInputExample';\nimport DateInputExample from '../components/DateInputExample';\nimport CheckboxInputExample from '../components/CheckboxInputExample';\nimport ButtonSizeExample from '../components/ButtonSizeExample';\nimport ButtonAppearanceExample from '../components/ButtonAppearanceExample';\nimport ButtonAppearanceOutlinedExample from '../components/ButtonAppearanceOutlinedExample';\nimport ButtonSizeAndAppearanceExample from '../components/ButtonSizeAndAppearanceExample';\nimport ScrollToTop from '../components/ScrollToTop';\n\nconst Typography = () => (\n  <div>\n    <div className={Styles.componentList}>\n      <H1>Component List</H1>\n      <div>\n        <H2>Typography</H2>\n        <div>\n          <div className={Styles.grouping}>\n            <H3>Headings</H3>\n            <div className={Styles.component}>\n              <H1>This is a h1 component</H1>\n              <Hr />\n            </div>\n            <div className={Styles.component}>\n              <H2>This is a h2 component</H2>\n              <Hr />\n            </div>\n            <div className={Styles.component}>\n              <H3>This is a H3 component</H3>\n              <Hr />\n            </div>\n            <div className={Styles.component}>\n              <H4>This is a H4 component</H4>\n              <Hr />\n            </div>\n            <div className={Styles.component}>\n              <H5>This is a H5 component</H5>\n              <Hr />\n            </div>\n            <div className={Styles.component}>\n              <H6>This is a H6 component</H6>\n              <Hr />\n            </div>\n          </div>\n          <div className={Styles.grouping}>\n            <H3>Text</H3>\n            <div className={Styles.component}>\n              <P>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed\n                lacinia interdum lectus. Quisque luctus metus non arcu lacinia,\n                a scelerisque elit porta. Etiam auctor vel urna vitae tristique.\n                Mauris vel urna semper, sagittis magna nec, consectetur est.\n                Phasellus pulvinar, nulla volutpat posuere tristique, purus\n                lorem consequat mi, a vestibulum diam erat et velit. Duis nec\n                faucibus tortor. Ut varius erat nec nisl mollis ultrices eu\n                sollicitudin turpis. Proin vulputate purus sit amet varius\n                posuere.\n              </P>\n              <P>This is a P component</P>\n            </div>\n            <div className={Styles.component}>\n              <Span>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed\n                lacinia interdum lectus. Quisque luctus metus non arcu lacinia,\n                a scelerisque elit porta. Etiam auctor vel urna vitae tristique.\n                Mauris vel urna semper, sagittis magna nec, consectetur est.\n                Phasellus pulvinar, nulla volutpat posuere tristique, purus\n                lorem consequat mi, a vestibulum diam erat et velit. Duis nec\n                faucibus tortor. Ut varius erat nec nisl mollis ultrices eu\n                sollicitudin turpis. Proin vulputate purus sit amet varius\n                posuere.\n              </Span>\n              <P>This is a Span component</P>\n            </div>\n            <div className={Styles.component}>\n              <Text tag=\"p\">\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed\n                lacinia interdum lectus. Quisque luctus metus non arcu lacinia,\n                a scelerisque elit porta. Etiam auctor vel urna vitae tristique.\n                Mauris vel urna semper, sagittis magna nec, consectetur est.\n                Phasellus pulvinar, nulla volutpat posuere tristique, purus\n                lorem consequat mi, a vestibulum diam erat et velit. Duis nec\n                faucibus tortor. Ut varius erat nec nisl mollis ultrices eu\n                sollicitudin turpis. Proin vulputate purus sit amet varius\n                posuere.\n              </Text>\n              <P>This is a Text component</P>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div>\n        <H2>Forms</H2>\n        <div className={Styles.grouping}>\n          <H3>Checkbox Input</H3>\n          <div className={Styles.component}>\n            <CheckboxInputExample />\n          </div>\n        </div>\n        <div className={Styles.grouping}>\n          <H3>Date Input</H3>\n          <div className={Styles.component}>\n            <DateInputExample />\n          </div>\n        </div>\n        <div className={Styles.grouping}>\n          <H3>Number Input</H3>\n          <div className={Styles.component}>\n            <NumberInputExample />\n          </div>\n        </div>\n        <div className={Styles.grouping}>\n          <H3 cfg={{ mb: 3 }}>Radiobutton</H3>\n          <div className={Styles.component}>\n            <RadioButtonExample />\n          </div>\n        </div>\n        <div className={Styles.grouping}>\n          <H3>Dropdown Menu</H3>\n          <div className={Styles.component}>\n            <SelectInputExample />\n          </div>\n        </div>\n        <div className={Styles.grouping}>\n          <H3>Text Input</H3>\n          <div className={Styles.component}>\n            <TextInputExample />\n          </div>\n        </div>\n      </div>\n      <H2>Buttons</H2>\n      <div className={Styles.grouping}>\n        <H3>Different Sizes</H3>\n        <div className={Styles.component}>\n          <ButtonSizeExample />\n        </div>\n        <H3>Different Appearances</H3>\n        <div className={Styles.component}>\n          <ButtonAppearanceExample />\n        </div>\n        <H3>Different Appearances Outlined</H3>\n        <div className={Styles.component}>\n          <ButtonAppearanceOutlinedExample />\n        </div>\n        <H3>Combining Size and Appearance</H3>\n        <div className={Styles.component}>\n          <ButtonSizeAndAppearanceExample />\n        </div>\n      </div>\n    </div>\n    <ScrollToTop />\n  </div>\n);\n\nexport default Typography;\n","import React from 'react';\nimport { H1, Link } from '@tpr/core';\nimport ScrollToTop from '../components/ScrollToTop';\n\nconst About = () => (\n  <div>\n    <H1>About Page</H1>\n    <Link>\n      <a target=\"_blanks\" href=\"https://tpr.netlify.app/\">\n        TPR React Components\n      </a>\n    </Link>\n    <ScrollToTop />\n  </div>\n);\n\nexport default About;\n","import React from 'react';\nimport Styles from './Layout.module.scss';\nimport { ArrowLink, ArrowButton, Hint } from '@tpr/layout';\nimport { H1, Hr, Link, P } from '@tpr/core';\nimport { Form, renderFields, FieldProps } from '@tpr/forms';\nimport { useHistory } from 'react-router-dom';\nimport ScrollToTop from '../components/ScrollToTop';\n\nconst InitialQuestions = () => {\n  const FIELD_NAME = 'schemeWoundUp';\n\n  const fields: FieldProps[] = [\n    {\n      name: FIELD_NAME,\n      label: 'Yes',\n      value: 'yes',\n      type: 'radio',\n      cfg: { my: 4, mr: 4 },\n    },\n    {\n      name: FIELD_NAME,\n      label: 'No',\n      value: 'no',\n      type: 'radio',\n      cfg: { my: 4, mr: 4 },\n    },\n  ];\n\n  const history = useHistory();\n\n  const onSubmit = (formValues: any) => {\n    history.push(\n      formValues.schemeWoundUp === 'yes'\n        ? 'initial-questions/scheme-wound-up'\n        : '',\n    );\n  };\n\n  return (\n    <div>\n      <ArrowLink\n        iconSide=\"left\"\n        pointsTo=\"left\"\n        onClick={() => {\n          window.location.href =\n            'https://exchange.thepensionsregulator.gov.uk/Members/SchemeListing.aspx';\n        }}\n      />\n      <H1>Check if you need to complete a scheme return</H1>\n      <Hr cfg={{ my: 2 }} />\n      <P cfg={{ my: 4 }}>\n        <b>Has this pension scheme been wound up and no longer exists?</b>\n      </P>\n      <Hint>\n        Select 'yes' if the scheme has no members, assets or liabilities and the\n        winding up process has finished. Not sure? {'  '}\n        <Link\n          onClick={() => console.log('Link to current scheme information page')}\n        >\n          Check the current details of the scheme\n        </Link>\n        .\n      </Hint>\n      <Form onSubmit={onSubmit}>\n        {({ handleSubmit, pristine }) => (\n          <form onSubmit={handleSubmit}>\n            <div className={Styles.radioButtons}>{renderFields(fields)}</div>\n            <Hr cfg={{ my: 8 }} />\n            <ArrowButton\n              type=\"submit\"\n              iconSide=\"right\"\n              pointsTo=\"right\"\n              title={'Continue'}\n              disabled={pristine}\n            />\n          </form>\n        )}\n      </Form>\n      <ScrollToTop />\n    </div>\n  );\n};\nexport default InitialQuestions;\n","import React from 'react';\nimport Styles from './Layout.module.scss';\nimport { H1, P, Hr } from '@tpr/core';\nimport { Info, ArrowButton, ArrowLink } from '@tpr/layout';\nimport ScrollToTop from '../components/ScrollToTop';\n\nconst WoundUpConfirmation = () => {\n  return (\n    <div>\n      <ArrowLink\n        iconSide=\"left\"\n        pointsTo=\"left\"\n        onClick={() => console.log('Click')}\n        cfg={{ mb: 3 }}\n      />\n      <Info>\n        <div className={Styles.confirmationInfoBox}>\n          <H1>Scheme wound up confirmed</H1>\n          <div>\n            <P cfg={{ my: 4 }}>\n              You confirmed on <b>9 July 2020</b> that your scheme has now wound\n              up.\n            </P>\n            <P cfg={{ my: 4 }}>Thank you for your time and co-operation.</P>\n          </div>\n        </div>\n      </Info>\n      <div>\n        <ArrowButton\n          title=\"Return to My Schemes\"\n          iconSide=\"right\"\n          pointsTo=\"right\"\n          cfg={{ mr: 4, mt: 7 }}\n          onClick={() => {\n            window.location.href =\n              'https://exchange.thepensionsregulator.gov.uk/Members/SchemeListing.aspx';\n          }}\n        ></ArrowButton>\n      </div>\n      <Hr cfg={{ my: 4 }} />\n      <ScrollToTop />\n    </div>\n  );\n};\n\nexport default WoundUpConfirmation;\n","import React from 'react';\nimport { ArrowLink, WarningBox, ArrowButton } from '@tpr/layout';\nimport { H1, Hr, P, Link } from '@tpr/core';\nimport { Form, FieldProps, renderFields, validate } from '@tpr/forms';\nimport Styles from './Layout.module.scss';\nimport { useHistory } from 'react-router-dom';\nimport ScrollToTop from '../components/ScrollToTop';\n\nconst SchemeWoundUp = () => {\n  const history = useHistory();\n  const onSubmit = () => history.push('scheme-wound-up/wound-up-confirmation');\n  const FIELD_NAME = 'windUpDate';\n  const fields: FieldProps[] = [\n    {\n      name: FIELD_NAME,\n      type: 'date',\n      label: 'When did winding up of the scheme finish?',\n      hint: 'For example, 31 3 2019 or 31 03 2019',\n      error: 'Date is required',\n      required: true,\n      cfg: { mb: 6 },\n    },\n  ];\n  return (\n    <div>\n      <ArrowLink\n        iconSide=\"left\"\n        pointsTo=\"left\"\n        onClick={() => history.goBack()}\n      />\n      <H1 cfg={{ mb: 8 }}>Scheme wound up</H1>\n      <Hr cfg={{ mb: 8 }} />\n      <P cfg={{ mb: 4 }}>\n        If this scheme has wound up, you don't need to complete a scheme return.\n      </P>\n      <Form onSubmit={onSubmit} validate={validate(fields)}>\n        {({ handleSubmit }) => (\n          <form onSubmit={handleSubmit}>\n            {renderFields(fields)}\n            <div className={Styles.warningBox}>\n              <WarningBox>\n                <P cfg={{ my: 3 }}>\n                  <b>Are you sure this scheme has wound up?</b>\n                </P>\n                <P cfg={{ mb: 4 }}>\n                  Choosing 'Confirm' will update the details we hold about this\n                  scheme and will remove it from your list of schemes. You'll no\n                  longer be able to access it. You may want to{' '}\n                  <Link underline>save or print previous scheme returns</Link>\n                  for your records.\n                </P>\n                <div>\n                  <ArrowButton\n                    type=\"submit\"\n                    intent=\"danger\"\n                    title=\"Confirm\"\n                    pointsTo=\"right\"\n                    iconSide=\"right\"\n                    cfg={{ mr: 4 }}\n                  />\n                  <Link\n                    underline\n                    onClick={() => history.push('/initial-questions')}\n                  >\n                    Cancel\n                  </Link>\n                </div>\n              </WarningBox>\n            </div>\n          </form>\n        )}\n      </Form>\n      <ScrollToTop />\n    </div>\n  );\n};\n\nexport default SchemeWoundUp;\n","import { CardAddress } from '@tpr/layout/lib/components/cards/common/interfaces';\nimport React from 'react';\n\nconst StateContext = React.createContext({\n  psr: 100004342,\n  setPsr: (newPsr: number) => {},\n  schemeName: 'The Top Pension Scheme',\n  setSchemeName: (schemeName: string) => {},\n  schemeAddress: {\n    addressLine1: 'The Pensions Regulator',\n    addressLine2: 'Napier House',\n    addressLine3: 'Trafalgar Place',\n    postTown: 'Brighton',\n    county: 'East Sussex',\n    postcode: 'BN1 4DW',\n    country: 'GB',\n    countryId: 12,\n  },\n  setSchemeAddress: (address: CardAddress) => {},\n  activeMembers: 10,\n  setActiveMembers: (activeMembers: number) => {},\n  deferredMembers: 10,\n  setDeferredMembers: (activeMembers: number) => {},\n  membershipEffective: new Date('2017-03-10'),\n  setMembershipEffective: (newDate: string) => {},\n  pensionerMembers: 10,\n  setPensionerMembers: (pensionerMembers: number) => {},\n  schemeStatus: 'open',\n  setSchemeStatus: (schemeStatus: string) => {},\n  schemeStatusApplied: new Date('2018-03-10'),\n  setSchemeStatusApplied: (schemeStatusApplied: string) => {},\n  totalMembers: 30,\n  setTotalMembers: (totalMembers: number) => {},\n  electronicConsent: 'no',\n  setElectronicConsent: (electronicConsent: string) => {},\n});\n\nexport default StateContext;\n","import React, { useContext } from 'react';\nimport { H1, Hr, P, Flex, H4 } from '@tpr/core';\nimport Styles from './Layout.module.scss';\nimport { ArrowLink, ArrowButton } from '@tpr/layout';\nimport {\n  Form,\n  renderFields,\n  FieldProps,\n  FFInputDate,\n  SeparatorY,\n  validate,\n} from '@tpr/forms';\nimport UserResearchSidebar from '../components/UserResearchSidebar';\nimport { Link, useHistory } from 'react-router-dom';\nimport ScrollToTop from '../components/ScrollToTop';\nimport StateContext from '../StateContext';\nimport SidebarContext from '../components/SidebarContext';\nconst SchemeStatusAndMembership = () => {\n  const appState = useContext(StateContext);\n  const history = useHistory();\n\n  const RADIO_BUTTON_NAME = 'schemeStatus';\n\n  const SchemeStatusFields: FieldProps[] = [\n    {\n      name: RADIO_BUTTON_NAME,\n      type: 'radio',\n      label: 'Open to new members',\n      hint: 'New members can join the scheme',\n      value: 'open',\n      cfg: { mt: 1, mb: 3 },\n    },\n    {\n      name: RADIO_BUTTON_NAME,\n      type: 'radio',\n      label: 'Closed to new members',\n      hint: 'New members are not allowed to join the scheme',\n      value: 'closed',\n      cfg: { mt: 1, mb: 3 },\n    },\n    {\n      name: RADIO_BUTTON_NAME,\n      type: 'radio',\n      label: 'Paid up (frozen)',\n      hint:\n        \"No more contributions are due to be paid into the scheme. Existing members' benefits are still held in the scheme.\",\n      value: 'paid',\n    },\n    {\n      name: RADIO_BUTTON_NAME,\n      type: 'radio',\n      label: 'Winding up',\n      hint:\n        'The trustees have started the process of winding up the scheme so that there will be no members, assets or liabilities.',\n      value: 'windingUp',\n    },\n  ];\n\n  const SchemeMembershipFields: FieldProps[] = [\n    {\n      name: 'activeMembers',\n      type: 'number',\n      label: 'Active Membership',\n      hint:\n        'Active members have benefits under the scheme and are continuing to save into it.',\n      validate: (value: any, SchemeStatusFields: any) => {\n        if (SchemeStatusFields.schemeStatus === 'paid' && value !== 0) {\n          return 'If the scheme status is paid up the scheme must have no active members';\n        } else if (value < 0 || (!value && value !== 0)) {\n          return 'Active members must be 0 or above';\n        } else {\n          return undefined;\n        }\n      },\n      inputWidth: 1,\n      cfg: { mb: 5 },\n      required: true,\n    },\n    {\n      name: 'deferredMembers',\n      type: 'number',\n      label: 'Deferred Membership',\n      hint:\n        'Deferred members have stopped paying into the scheme but are not yet receiving a pension.',\n      validate: (value: any, SchemeMembershipFields: any) => {\n        if (value < 0 || (!value && value !== 0)) {\n          return 'Deferred members must be 0 or above';\n        } else {\n          return undefined;\n        }\n      },\n      inputWidth: 1,\n      cfg: { mb: 5 },\n      required: true,\n    },\n    {\n      name: 'pensionerMembers',\n      type: 'number',\n      label: 'Pensioner Membership',\n      hint: 'Pensioner members are receiving a pension from the scheme.',\n      validate: (value: any, SchemeMembershipFields: any) => {\n        if (value < 0 || (!value && value !== 0)) {\n          return 'Pensioner members must be 0 or above';\n        } else {\n          return undefined;\n        }\n      },\n      inputWidth: 1,\n      cfg: { mb: 5 },\n      required: true,\n    },\n    {\n      name: 'totalMembers',\n      type: 'number',\n      label: 'Total Membership',\n      validate: (value: any, SchemeMembershipFields: any) => {\n        const totalMembers =\n          SchemeMembershipFields.activeMembers +\n          SchemeMembershipFields.deferredMembers +\n          SchemeMembershipFields.pensionerMembers;\n        if (value !== totalMembers) {\n          return 'Total members must be equal to the total of active, deferred and pensioner members';\n        }\n      },\n      inputWidth: 1,\n      cfg: { mb: 5 },\n      required: true,\n    },\n  ];\n\n  const { dispatch } = useContext(SidebarContext);\n\n  const onSubmit = (values: any) => {\n    appState.setSchemeStatus(values.schemeStatus);\n    appState.setSchemeStatusApplied(values.schemeStatusApplied);\n    appState.setActiveMembers(values.activeMembers);\n    appState.setDeferredMembers(values.deferredMembers);\n    appState.setPensionerMembers(values.pensionerMembers);\n    appState.setMembershipEffective(values.dateMembershipEffective);\n    appState.setTotalMembers(values.totalMembers);\n    dispatch({ type: 'COMPLETE', index: 1 });\n    history.push('/consent-to-electronic-communication');\n  };\n\n  return (\n    <div className={Styles.root}>\n      <UserResearchSidebar />\n      <div className={Styles.main}>\n        <Link to=\"/scheme-name-and-address\">\n          <ArrowLink\n            onClick={() => {}}\n            iconSide=\"left\"\n            pointsTo=\"left\"\n            cfg={{ mt: 3 }}\n          />\n        </Link>\n        <H1 cfg={{ mb: 2 }}>Scheme status and membership</H1>\n        <Hr cfg={{ mt: 6, mb: 8 }} />\n        <P cfg={{ mb: 6 }}>\n          These are the scheme details held by the regulator. Change or amend\n          where necessary.\n        </P>\n        <Form\n          onSubmit={onSubmit}\n          validate={validate(SchemeMembershipFields)}\n          initialValues={{\n            [RADIO_BUTTON_NAME]: appState.schemeStatus,\n            schemeStatusApplied: appState.schemeStatusApplied,\n            activeMembers: appState.activeMembers,\n            deferredMembers: appState.deferredMembers,\n            pensionerMembers: appState.pensionerMembers,\n            totalMembers: appState.totalMembers,\n            dateMembershipEffective: appState.membershipEffective,\n          }}\n        >\n          {({ handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <H4 cfg={{ mb: 6 }}>Scheme status</H4>\n              <SeparatorY>\n                <div>{renderFields(SchemeStatusFields)}</div>\n              </SeparatorY>\n              <Flex cfg={{ bg: 'neutral.3', p: 6 }}>\n                <FFInputDate\n                  name=\"schemeStatusApplied\"\n                  label=\"Date scheme status applied\"\n                  hint=\"For example, 31 2 2019 or 31 02 2019\"\n                  validate={(value) => {\n                    const valueDate = new Date(value);\n                    const previousSchemeDate = new Date('2019-02-31');\n                    if (previousSchemeDate >= valueDate) {\n                      return 'The new scheme status date must be after the previous scheme status date';\n                    }\n                  }}\n                  required\n                />\n              </Flex>\n\n              <H4 cfg={{ my: 4 }}>Scheme Membership</H4>\n              <P cfg={{ my: 2 }}>\n                Only count each member once. (For example, if a member has both\n                active and deferred benefits, only count the member once as an\n                active member).\n              </P>\n              <P cfg={{ mb: 3 }}>Tell us the number of:</P>\n              <div>{renderFields(SchemeMembershipFields)}</div>\n              <Flex cfg={{ bg: 'neutral.3', p: 6 }}>\n                <FFInputDate\n                  name=\"dateMembershipEffective\"\n                  label=\"Date membership became effective\"\n                  hint=\"For example, 31 2 2019 or 31 02 2019\"\n                  validate={(value) => {\n                    const valueDate = new Date(value);\n                    const dateUpperBound = new Date('2019-03-31');\n                    const dateLowerBound = new Date('2018-04-01');\n                    if (\n                      dateLowerBound < valueDate &&\n                      valueDate > dateUpperBound\n                    ) {\n                      return 'The date when the membership numbers applied must be between 1 April 2018 and 31 March 2019';\n                    }\n                  }}\n                  required\n                />\n              </Flex>\n              <Hr cfg={{ mt: 4, mb: 8 }} />\n              <ArrowButton\n                type=\"submit\"\n                iconSide=\"right\"\n                pointsTo=\"right\"\n                title=\"Save and Continue\"\n              />\n            </form>\n          )}\n        </Form>\n        <ScrollToTop />\n      </div>\n    </div>\n  );\n};\n\nexport default SchemeStatusAndMembership;\n","import React, { useContext } from 'react';\nimport Styles from './Layout.module.scss';\nimport { H1, Hr, Flex, P } from '@tpr/core';\nimport { Form, FieldProps, renderFields, SeparatorX } from '@tpr/forms';\nimport { ArrowButton } from '@tpr/layout';\nimport { useHistory } from 'react-router-dom';\nimport UserResearchSidebar from '../components/UserResearchSidebar';\nimport ScrollToTop from '../components/ScrollToTop';\nimport StateContext from '../StateContext';\nimport SidebarContext from '../components/SidebarContext';\n\nconst ElectronicComsConsent = () => {\n  const appState = useContext(StateContext);\n  const history = useHistory();\n\n  const FIELD_NAME = 'electronicConsent';\n\n  const { dispatch } = useContext(SidebarContext);\n\n  const submit = (values: any) => {\n    appState.setElectronicConsent(values.electronicConsent);\n    dispatch({ type: 'COMPLETE', index: 2 });\n    history.push('/trustees');\n  };\n\n  const fields: FieldProps[] = [\n    { name: FIELD_NAME, type: 'radio', value: 'yes', label: 'Yes' },\n    { name: FIELD_NAME, type: 'radio', value: 'no', label: 'No' },\n  ];\n\n  return (\n    <div className={Styles.root}>\n      <UserResearchSidebar />\n      <div className={Styles.main}>\n        <H1 cfg={{ mt: 6, mb: 2 }}>Consent to electronic communication</H1>\n        <Hr cfg={{ mt: 5, mb: 8 }} />\n        <Flex cfg={{ flexDirection: 'column' }}>\n          <P cfg={{ mb: 4 }}>\n            We would like to deliver notices, notifications and other\n            information by email wherever possible.\n          </P>\n          <P>\n            <strong>\n              I confirm that I give consent to receiving information\n              electronically and am authorised to provide this consent.\n            </strong>\n          </P>\n        </Flex>\n\n        <Form\n          onSubmit={submit}\n          initialValues={{ [FIELD_NAME]: appState.electronicConsent }}\n        >\n          {({ handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <Flex cfg={{ mt: 2, mb: 6, flexDirection: 'column' }}>\n                <SeparatorX>{renderFields(fields)}</SeparatorX>\n              </Flex>\n              <Hr cfg={{ mt: 6, mb: 8 }} />\n              <ArrowButton\n                title=\"Save and Continue\"\n                type=\"submit\"\n                pointsTo=\"right\"\n                iconSide=\"right\"\n              />\n            </form>\n          )}\n        </Form>\n        <ScrollToTop />\n      </div>\n    </div>\n  );\n};\n\nexport default ElectronicComsConsent;\n","import React from 'react';\nimport { Flex, P, Link, Hr, H4 } from '@tpr/core';\nimport { FieldProps, renderFields } from '@tpr/forms';\nimport { ArrowButton } from '@tpr/layout';\nimport { CardAddress } from '@tpr/layout/lib/components/cards/common/interfaces';\n\nconst AddressConfirmation = (props: {\n  address: CardAddress;\n  changeAddress: () => void;\n  title?: string;\n  helpText?: string;\n}) => {\n  const addressLine1FieldName = 'addressLine1';\n  const addressLine2FieldName = 'addressLine2';\n\n  const addressFields: FieldProps[] = [\n    {\n      type: 'text',\n      name: addressLine1FieldName,\n      label: 'Address Line 1',\n      validate: (value) => {\n        if (!value) return 'Address Line 1 required';\n      },\n    },\n    { type: 'text', name: addressLine2FieldName, label: 'Address Line 2' },\n  ];\n\n  return (\n    <>\n      <Flex cfg={{ flexDirection: 'column' }}>\n        {props.title ? <H4 cfg={{ mb: 1 }}>{props.title}</H4> : <></>}\n        {props.helpText ? <P cfg={{ mb: 4 }}>{props.helpText}</P> : <></>}\n        {renderFields(addressFields)}\n        <P cfg={{ mt: 2 }}>Address line 3</P>\n        <P cfg={{ mt: 1 }}>{props.address.addressLine3}</P>\n        <P cfg={{ mt: 6 }}>Post Town</P>\n        <P cfg={{ mt: 1 }}>{props.address.postTown}</P>\n        <P cfg={{ mt: 6 }}>County</P>\n        <P cfg={{ mt: 1 }}>{props.address.county}</P>\n        <P cfg={{ mt: 6 }}>Postcode</P>\n        <P cfg={{ mt: 1 }}>{props.address.postcode}</P>\n        <P cfg={{ mt: 6 }}>Country</P>\n        <P cfg={{ mt: 1 }}>{props.address.country}</P>\n        <Flex cfg={{ justifyContent: 'flex-start' }}>\n          <Link\n            underline\n            onClick={() => {\n              props.changeAddress();\n            }}\n          >\n            I need to change the address\n          </Link>\n        </Flex>\n      </Flex>\n      <Hr cfg={{ mt: 4, mb: 5 }} />\n      <Flex>\n        <ArrowButton\n          type=\"submit\"\n          title=\"Save and continue\"\n          iconSide=\"right\"\n          pointsTo=\"right\"\n        />\n      </Flex>\n    </>\n  );\n};\n\nexport default AddressConfirmation;\n","import React from 'react';\nimport { Flex, P, Link, Hr } from '@tpr/core';\nimport { FFSelect } from '@tpr/forms';\nimport { ArrowButton, Hint } from '@tpr/layout';\n\nconst AddressSelect = (props: {\n  postcode: string;\n  isPristine: boolean;\n  changePostcode: () => void;\n  hint?: string;\n}) => {\n  const placeHolderAddresses = [\n    {\n      label: 'ACME Acres, First Floor, 123 Any Street, Brighton, BN1 9PR',\n      value: {\n        addressLine1: 'ACME Acres',\n        addressLine2: 'First Floor',\n        addressLine3: '123 Any Street',\n        postTown: 'Brighton',\n        county: 'East Sussex',\n        postcode: 'BN1 9PR',\n        country: 'UK',\n      },\n    },\n    {\n      label: 'University of ACME, ACME House, Trainer Place, Brighton, BN1 9PR',\n      value: {\n        addressLine1: 'University of ACME',\n        addressLine2: 'ACME House',\n        addressLine3: 'Trainer Place',\n        postTown: 'Brighton',\n        county: 'Essex',\n        postcode: 'BN1 9PR',\n        country: 'UK',\n      },\n    },\n    {\n      label:\n        'ACME Industries Ltd., ACME Acres, Warner Bros. Place, Brighton, BN1 9PR',\n      value: {\n        addressLine1: 'ACME Industries Ltd.',\n        addressLine2: 'ACME Acres',\n        addressLine3: 'Warner Bros. Place',\n        postTown: 'Brighton',\n        county: 'Essex',\n        postcode: 'BN1 9PR',\n        country: 'UK',\n      },\n    },\n  ];\n\n  const addressSelectFieldName: string = 'addressSelect';\n\n  return (\n    <>\n      <Flex cfg={{ my: 3, bg: 'neutral.3', flexDirection: 'column', p: 6 }}>\n        <P tag=\"b\">Postcode</P>\n        <Flex cfg={{ mt: 3 }}>\n          <P tag=\"b\" cfg={{ mr: 1 }}>\n            {props.postcode}\n          </P>\n          <Link underline={true} onClick={() => props.changePostcode()}>\n            Change\n          </Link>\n        </Flex>\n      </Flex>\n      {props.hint ? <Hint>{props.hint}</Hint> : <></>}\n      <FFSelect\n        name={addressSelectFieldName}\n        label=\"Address\"\n        options={[...placeHolderAddresses]}\n        cfg={{ my: 4 }}\n      />\n      <Hr cfg={{ mt: 4, mb: 5 }} />\n      <Flex>\n        <ArrowButton\n          type=\"submit\"\n          iconSide=\"right\"\n          pointsTo=\"right\"\n          title=\"Continue\"\n          disabled={props.isPristine}\n        />\n      </Flex>\n    </>\n  );\n};\n\nexport default AddressSelect;\n","import React from 'react';\nimport { Flex, P, Button } from '@tpr/core';\nimport { FFInputText } from '@tpr/forms';\n\nconst PostcodeSearch = (props: { text?: string }) => {\n  return (\n    <>\n      <Flex\n        cfg={{\n          mt: 2,\n          p: 4,\n          bg: 'neutral.3',\n          flexDirection: 'column',\n          justifyContent: 'space-between',\n        }}\n      >\n        {props.text ? <P cfg={{ my: 3 }}>{props.text}</P> : <></>}\n        <FFInputText\n          name=\"postcodeSearch\"\n          label=\"Postcode\"\n          inputWidth={2}\n          validate={(value) => {\n            if (!value) return 'Enter a postcode';\n          }}\n        />\n        <Flex cfg={{ my: 3 }}>\n          <Button type=\"submit\">Find address</Button>\n        </Flex>\n      </Flex>\n    </>\n  );\n};\n\nexport default PostcodeSearch;\n","import React, { useState, useContext } from 'react';\nimport Styles from './Layout.module.scss';\nimport { H1, Hr, P, H4, Flex } from '@tpr/core';\nimport UserResearchSidebar from '../components/UserResearchSidebar';\nimport { Link, useHistory } from 'react-router-dom';\nimport { ArrowLink, Hint } from '@tpr/layout';\nimport { Form, FieldProps, renderFields } from '@tpr/forms';\nimport ScrollToTop from '../components/ScrollToTop';\nimport StateContext from '../StateContext';\nimport SidebarContext from '../components/SidebarContext';\nimport AddressConfirmation from '../components/AddressForm/AddressConfirmation';\nimport AddressSelect from '../components/AddressForm/AddressSelect';\nimport PostcodeSearch from '../components/AddressForm/PostcodeSearch';\n\nconst SchemeNameAndAddress = () => {\n  const appState = useContext(StateContext);\n  const history = useHistory();\n\n  const [step, setStep] = useState<\n    'addressConfirmation' | 'selectAddress' | 'postcodeSearch'\n  >('addressConfirmation');\n\n  const DisplayForm = (pristine: boolean) => {\n    switch (step) {\n      case 'addressConfirmation':\n        return (\n          <AddressConfirmation\n            address={{\n              addressLine1: appState.schemeAddress.addressLine1,\n              addressLine2: appState.schemeAddress.addressLine2,\n              addressLine3: appState.schemeAddress.addressLine3,\n              postTown: appState.schemeAddress.postTown,\n              county: appState.schemeAddress.county,\n              postcode: appState.schemeAddress.postcode,\n              country: appState.schemeAddress.country,\n              countryId: appState.schemeAddress.countryId,\n            }}\n            changeAddress={() => setStep('postcodeSearch')}\n          />\n        );\n      case 'selectAddress':\n        return (\n          <AddressSelect\n            postcode={appState.schemeAddress.postcode}\n            changePostcode={() => {\n              setStep('postcodeSearch');\n            }}\n            isPristine={pristine}\n            hint=\"Select the scheme correspondence address from the search results.\"\n          />\n        );\n      case 'postcodeSearch':\n        return <PostcodeSearch />;\n      default:\n        console.warn('Invalid step');\n        break;\n    }\n  };\n\n  const schemeName: FieldProps[] = [\n    {\n      type: 'text',\n      name: 'schemeName',\n      inputWidth: 5,\n      label: 'Scheme name',\n      validate: (value) => {\n        if (!value) {\n          return 'Scheme name required';\n        }\n      },\n      cfg: { mb: 3 },\n    },\n  ];\n\n  const { dispatch } = useContext(SidebarContext);\n\n  const submitAddressConfirmation = (values: any) => {\n    appState.setSchemeAddress({\n      ...appState.schemeAddress,\n      addressLine1: values.addressLine1,\n      addressLine2: values.addressLine2,\n    });\n    appState.setSchemeName(values.schemeName);\n    dispatch({ type: 'COMPLETE', index: 0 });\n    history.push('/scheme-status-and-membership');\n  };\n\n  const submitAddressSelect = (values: any) => {\n    appState.setSchemeAddress({\n      ...values.addressSelect.value,\n    });\n    setStep('addressConfirmation');\n  };\n\n  const submitPostcodeSearch = (values: any) => {\n    setStep('selectAddress');\n  };\n\n  const onSubmit = (values: any) => {\n    switch (step) {\n      case 'addressConfirmation':\n        return submitAddressConfirmation(values);\n      case 'postcodeSearch':\n        return submitPostcodeSearch(values);\n      case 'selectAddress':\n        return submitAddressSelect(values);\n      default:\n        console.warn('invalid step');\n        break;\n    }\n  };\n\n  return (\n    <div className={Styles.root}>\n      <UserResearchSidebar />\n      <div className={Styles.main}>\n        <Link to=\"/\">\n          <ArrowLink\n            onClick={() => {}}\n            pointsTo=\"left\"\n            iconSide=\"left\"\n            cfg={{ mt: 3 }}\n          />\n        </Link>\n        <H1 cfg={{ mt: 6, mb: 2 }}>Scheme name and address</H1>\n        <Hr cfg={{ mt: 6, mb: 8 }} />\n        <Form\n          onSubmit={(values: any) => onSubmit(values)}\n          initialValues={{\n            schemeName: appState.schemeName,\n            addressLine1: appState.schemeAddress.addressLine1,\n            addressLine2: appState.schemeAddress.addressLine2,\n            postcodeSearch: appState.schemeAddress.postcode,\n          }}\n        >\n          {({ handleSubmit, pristine }) => (\n            <form onSubmit={handleSubmit}>\n              <Flex cfg={{ flexDirection: 'column', mb: 3 }}>\n                <P cfg={{ mb: 4 }}>\n                  These are the scheme details currently held by the regulator.\n                  Correct any details as necessary.\n                </P>\n                {renderFields(schemeName)}\n                <Hint>\n                  This needs to be the full name of the pension scheme, as\n                  written out in the trust deed or any other amending documents\n                  which may have changed the scheme name. Please don't include\n                  any scheme reference numbers as part of the scheme name.\n                </Hint>\n              </Flex>\n              <Flex cfg={{ mb: 4, flexDirection: 'column' }}>\n                <H4 cfg={{ mb: 1 }}>Scheme correspondence address</H4>\n                <Hint>\n                  We'll use this address when we need to get in touch with the\n                  scheme trustee(s).\n                </Hint>\n                {DisplayForm(pristine)}\n              </Flex>\n            </form>\n          )}\n        </Form>\n        <ScrollToTop />\n      </div>\n    </div>\n  );\n};\n\nexport default SchemeNameAndAddress;\n","import React from 'react';\nimport { Link } from '@tpr/core';\nimport { useHistory } from 'react-router-dom';\n\nconst AddTrusteeLink = () => {\n  const history = useHistory();\n  return (\n    <Link\n      onClick={() => {\n        history.push('/trustees/add-trustee');\n      }}\n    >\n      + Add trustee\n    </Link>\n  );\n};\n\nexport default AddTrusteeLink;\n","import ITrusteeRepository from './ITrusteeRepository';\nimport { Trustee } from '@tpr/layout/lib/components/cards/trustee/context';\nimport Data from '../data.json';\n\nclass TrusteeRepository implements ITrusteeRepository {\n  WriteTrustee(trustee: Trustee): void {\n    const toWrite = {\n      ...trustee,\n      id: this.getRandomInt(1000).toString(),\n      effectiveDate: new Date().toString(),\n      schemeRoleId: this.getRandomInt(1000),\n    };\n    Data.trustees.push(toWrite);\n  }\n\n  GetAllTrustees(): Trustee[] {\n    const trustees: Trustee[] = Data.trustees;\n    return trustees;\n  }\n\n  GetTrustee(id: string): Trustee {\n    const result = Data.trustees.find((x) => x.id === id);\n    const trustee: Trustee = { ...result };\n    return trustee;\n  }\n\n  RemoveTrustee(trustee: any) {\n    const trusteeToRemove = Data.trustees.findIndex((x) => x.id === trustee.id);\n\n    if (trusteeToRemove > -1) {\n      Data.trustees.splice(trusteeToRemove, 1);\n    }\n  }\n\n  UpdateTrustee(trustee: any) {\n    const trusteeToUpdate = Data.trustees.findIndex((x) => x.id === trustee.id);\n\n    if (trusteeToUpdate > -1) {\n      Data.trustees[trusteeToUpdate] = trustee;\n    }\n  }\n\n  getRandomInt(maxInt: number) {\n    return Math.floor(Math.random() * maxInt);\n  }\n}\nexport default new TrusteeRepository();\n","import React, { useState, useContext } from 'react';\nimport Styles from './Layout.module.scss';\nimport { H1, Hr, P, Flex, H2 } from '@tpr/core';\nimport UserResearchSidebar from '../components/UserResearchSidebar';\nimport AddTrusteeLink from '../components/AddTrusteeLink';\nimport { TrusteeCard, ArrowButton } from '@tpr/layout';\nimport { Trustee } from '@tpr/layout/lib/components/cards/trustee/context';\nimport { Form } from '@tpr/forms';\nimport ScrollToTop from '../components/ScrollToTop';\nimport TrusteeRepository from '../services/TrusteeRepository';\nimport { TrusteeProps } from '@tpr/layout/lib/components/cards/trustee/trusteeMachine';\nimport { useHistory } from 'react-router-dom';\nimport SidebarContext from '../components/SidebarContext';\nconst Trustees = () => {\n  const { dispatch } = useContext(SidebarContext);\n  const history = useHistory();\n\n  const onSubmit = (values: any) => {\n    dispatch({ type: 'COMPLETE', index: 3 });\n    history.push({ search: 'state=trustee-form-submitted' });\n  };\n\n  const [trustees, setTrustees] = useState(TrusteeRepository.GetAllTrustees());\n  const [correctTrusteeDetails, setCorrectTrusteeDetails] = useState(0);\n\n  const callAddressAPI = (endpoint: string) => {\n    const results = Promise.resolve({\n      data: {\n        results: [\n          {\n            format: 'https://SomeFakeApi124a.dev/v2/someFakeEndpoint1',\n          },\n        ],\n        address: [\n          { addressLine1: 'The Pensions Regulator' },\n          { addressLine2: 'Napier House' },\n          { addressLine3: 'Trafalgar Place' },\n          { locality: 'Brighton' },\n          { province: 'East Sussex' },\n          { postalCode: 'BN1 4DW' },\n          { country: '' },\n        ],\n      },\n    });\n    return results;\n  };\n\n  const removeTrustee = (formValues: any, trusteeToRemove: Trustee) => {\n    TrusteeRepository.RemoveTrustee(trusteeToRemove);\n    setTrustees([...TrusteeRepository.GetAllTrustees()]);\n    history.push({ search: 'state=trustee-removed' });\n    return Promise.resolve();\n  };\n\n  const updateTrustee = (formValues: any, trusteeToUpdate: TrusteeProps) => {\n    TrusteeRepository.UpdateTrustee(trusteeToUpdate);\n    setTrustees([...TrusteeRepository.GetAllTrustees()]);\n    return Promise.resolve();\n  };\n\n  const updateDetails = (formValues: any, trusteeToUpdate: TrusteeProps) => {\n    const result = updateTrustee(formValues, trusteeToUpdate);\n    history.push({ search: 'state=trustee-details-edit' });\n    return result;\n  };\n\n  const updateContact = (formValues: any, trusteeToUpdate: TrusteeProps) => {\n    const result = updateTrustee(formValues, trusteeToUpdate);\n    history.push({ search: 'state=trustee-contacts-edit' });\n    return result;\n  };\n\n  const updateAddress = (formValues: any, trusteeToUpdate: TrusteeProps) => {\n    const result = updateTrustee(formValues, trusteeToUpdate);\n    history.push({ search: 'state=trustee-address-edit' });\n    return result;\n  };\n\n  return (\n    <div className={Styles.root}>\n      <UserResearchSidebar />\n      <div className={Styles.main}>\n        <H1 cfg={{ mb: 2 }}>Trustee Details</H1>\n        <Hr cfg={{ mt: 6, mb: 8 }} />\n        <P cfg={{ mb: 3 }}>\n          The following is a list of the trustees we hold for the scheme. Check,\n          amend and add trustees as necessary.\n        </P>\n        <Flex cfg={{ p: 4, bg: 'neutral.3', justifyContent: 'space-between' }}>\n          <P>Total Number of Trustees: {trustees.length}</P>\n          <AddTrusteeLink />\n        </Flex>\n        <H2 cfg={{ mt: 2, mb: 2 }}>Trustees</H2>\n        {trustees.map((trustee) => (\n          <TrusteeCard\n            key={trustee.schemeRoleId.toString()}\n            onDetailsSave={updateDetails}\n            onContactSave={updateContact}\n            onAddressSave={updateAddress}\n            onRemove={removeTrustee}\n            onCorrect={(value: boolean) => {\n              if (value) {\n                setCorrectTrusteeDetails(correctTrusteeDetails + 1);\n              } else {\n                setCorrectTrusteeDetails(correctTrusteeDetails - 1);\n              }\n            }}\n            addressAPI={{\n              get: (endpoint: any) => callAddressAPI(endpoint),\n              limit: 100,\n            }}\n            preValidatedData={true}\n            complete={false}\n            i18n={{\n              preview: {\n                buttons: {\n                  one: 'Trustee',\n                  two: 'Remove',\n                  three: 'Correspondence address',\n                  four: 'Contact details',\n                },\n                checkboxLabel: 'All details are correct',\n              },\n            }}\n            trustee={trustee}\n            cfg={{ mb: 6 }}\n          />\n        ))}\n        <Flex cfg={{ justifyContent: 'flex-end' }}>\n          <AddTrusteeLink />\n        </Flex>\n        <Hr cfg={{ mb: 8 }} />\n        <Form onSubmit={onSubmit}>\n          {({ handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              <ArrowButton\n                type=\"submit\"\n                pointsTo=\"right\"\n                iconSide=\"right\"\n                title=\"Save and Continue\"\n                disabled={!(correctTrusteeDetails === trustees.length)}\n              />\n            </form>\n          )}\n        </Form>\n        <ScrollToTop />\n      </div>\n    </div>\n  );\n};\n\nexport default Trustees;\n","import React from 'react';\nimport Styles from '../Layout.module.scss';\nimport { ArrowLink, ArrowButton } from '@tpr/layout';\nimport { useHistory } from 'react-router-dom';\nimport { H3, H1, Hr, P } from '@tpr/core';\nimport { Form, renderFields, FieldProps } from '@tpr/forms';\nimport ScrollToTop from '../../components/ScrollToTop';\nimport TrusteeRepository from '../../services/TrusteeRepository';\n\nconst IndividualTrusteeStepFour = (props: any) => {\n  const history = useHistory();\n\n  const fields: FieldProps[] = [\n    {\n      type: 'text',\n      name: 'telephoneNumber',\n      label: 'Phone number',\n      cfg: { my: 5 },\n      inputWidth: 5,\n      validate: (values) => {\n        if (!values) {\n          return 'Enter a UK telephone number, such as 01632 960 001, 07700 900 982, or +44 0808 157 0192';\n        }\n      },\n    },\n    {\n      type: 'text',\n      name: 'emailAddress',\n      label: 'Email address',\n      cfg: { my: 5 },\n      inputWidth: 5,\n      validate: (values) => {\n        if (!values) {\n          return 'Enter an email address in the correct format, like name@example.com';\n        }\n      },\n    },\n  ];\n\n  const onSubmit = (values: any) => {\n    TrusteeRepository.WriteTrustee({ ...props.newTrustee, ...values });\n    history.push({ pathname: '/trustees', search: 'state=trustee-added' });\n  };\n\n  return (\n    <div className={Styles.main}>\n      <ArrowLink\n        pointsTo=\"left\"\n        iconSide=\"left\"\n        title=\"Back\"\n        onClick={() => history.goBack()}\n        cfg={{ mt: 3 }}\n      />\n      <H3 cfg={{ mt: 2 }}>Add trustee: Individual</H3>\n      <H1 cfg={{ mt: 2, mb: 3 }}>Contact details for this trustee</H1>\n      <Hr cfg={{ mt: 4, mb: 5 }} />\n      <P cfg={{ mb: 3 }}>\n        Provide contact for this trustee (not a third party, such as an\n        administrator).\n      </P>\n      <Form onSubmit={onSubmit}>\n        {({ handleSubmit, valid }) => (\n          <form onSubmit={handleSubmit}>\n            {renderFields(fields)}\n            <Hr cfg={{ mt: 8, mb: 4 }} />\n            <ArrowButton\n              title=\"Save and Continue\"\n              type=\"submit\"\n              pointsTo=\"right\"\n              iconSide=\"right\"\n              disabled={!valid}\n            />\n          </form>\n        )}\n      </Form>\n      <ScrollToTop />\n    </div>\n  );\n};\n\nexport default IndividualTrusteeStepFour;\n","import React from 'react';\nimport Styles from '../Layout.module.scss';\nimport { H1, H3, Hr } from '@tpr/core';\nimport { useHistory } from 'react-router-dom';\nimport { ArrowLink, ArrowButton } from '@tpr/layout';\nimport { Form, renderFields, FieldProps, SeparatorY } from '@tpr/forms';\nimport ScrollToTop from '../../components/ScrollToTop';\n\nconst IndividualTrusteeStepOne = (props: any) => {\n  const history = useHistory();\n\n  const fields: FieldProps[] = [\n    { type: 'text', label: 'Title', inputWidth: 5, name: 'title' },\n    {\n      type: 'text',\n      label: 'Firstname',\n      inputWidth: 5,\n      name: 'firstname',\n      validate: (value) => {\n        if (!value) return 'Enter first name';\n      },\n    },\n    {\n      type: 'text',\n      label: 'Lastname',\n      inputWidth: 5,\n      name: 'lastname',\n      validate: (value) => {\n        if (!value) return 'Enter last name';\n      },\n    },\n  ];\n\n  const onSubmit = (values: any) => {\n    props.setNewTrustee({ ...props.newTrustee, ...values });\n    props.nextPage();\n  };\n\n  return (\n    <div className={Styles.main}>\n      <ArrowLink\n        pointsTo=\"left\"\n        iconSide=\"left\"\n        title=\"Back\"\n        onClick={() => {\n          history.goBack();\n        }}\n        cfg={{ mt: 3 }}\n      />\n      <H3 cfg={{ mt: 2 }}>Add trustee: Individual</H3>\n      <H1 cfg={{ mt: 2, mb: 3 }}>Name of the trustee</H1>\n      <Hr cfg={{ mt: 4, mb: 5 }} />\n      <Form onSubmit={onSubmit}>\n        {({ handleSubmit, hasValidationErrors }) => (\n          <form onSubmit={handleSubmit}>\n            <SeparatorY>{renderFields(fields)}</SeparatorY>\n            <Hr cfg={{ mt: 7, mb: 4 }} />\n            <ArrowButton\n              type=\"submit\"\n              title=\"Continue\"\n              iconSide=\"right\"\n              pointsTo=\"right\"\n              cfg={{ my: 4 }}\n              disabled={hasValidationErrors}\n            />\n          </form>\n        )}\n      </Form>\n      <ScrollToTop />\n    </div>\n  );\n};\n\nexport default IndividualTrusteeStepOne;\n","import React from 'react';\nimport Styles from '../Layout.module.scss';\nimport { ArrowLink, ArrowButton, HelpLink } from '@tpr/layout';\nimport { useHistory } from 'react-router-dom';\nimport { H1, H3, Hr, H4, P } from '@tpr/core';\nimport {\n  Form,\n  SeparatorY,\n  renderFields,\n  SeparatorX,\n  FieldProps,\n} from '@tpr/forms';\nimport ScrollToTop from '../../components/ScrollToTop';\n\nconst IndividualTrusteeStepTwo = (props: any) => {\n  const history = useHistory();\n\n  const TRUSTEE_TYPE_BUTTONS = 'trusteeType';\n  const PROF_TRUSTEE_BUTTONS = 'professionalTrustee';\n\n  const fields: FieldProps[][] = [\n    [\n      {\n        name: TRUSTEE_TYPE_BUTTONS,\n        type: 'radio',\n        label: 'Member-nominated trustee',\n        value: 'memberNominated',\n      },\n      {\n        name: TRUSTEE_TYPE_BUTTONS,\n        type: 'radio',\n        label: 'Employer-appointed trustee',\n        value: 'employerNominated',\n      },\n      {\n        name: TRUSTEE_TYPE_BUTTONS,\n        type: 'radio',\n        label: 'Regulator-appointed trustee',\n        value: 'regulatorAppointed',\n      },\n    ],\n    [\n      { name: PROF_TRUSTEE_BUTTONS, type: 'radio', label: 'Yes', value: 'yes' },\n      {\n        name: PROF_TRUSTEE_BUTTONS,\n        type: 'radio',\n        label: 'No',\n        value: 'no',\n        cfg: { mb: 4 },\n      },\n    ],\n  ];\n\n  const onSubmit = (values: any) => {\n    props.setNewTrustee({ ...props.newTrustee, ...values });\n    props.nextPage();\n  };\n\n  return (\n    <div className={Styles.main}>\n      <ArrowLink\n        pointTo=\"left\"\n        iconSide=\"left\"\n        title=\"Back\"\n        cfg={{ mt: 3 }}\n        onClick={() => history.goBack()}\n      />\n      <H3 cfg={{ mt: 2 }}>Add trustee: Individual</H3>\n      <H1 cfg={{ mt: 2, mb: 3 }}>Type of trustee</H1>\n      <Hr cfg={{ mt: 4, mb: 5 }} />\n      <Form onSubmit={onSubmit}>\n        {({ handleSubmit, values }) => (\n          <form onSubmit={handleSubmit}>\n            <H4 cfg={{ mb: 2 }}>Select the most relevant option.</H4>\n            <SeparatorY>{renderFields(fields[0])}</SeparatorY>\n            <br />\n            <H4 cfg={{ mb: 2 }}>Is this individual a professional trustee?</H4>\n            <SeparatorX>{renderFields(fields[1])}</SeparatorX>\n            <HelpLink title=\"What is a 'professional' trustee?\">\n              <P>\n                Someone will normally be considered a professional trustee if\n                they represented or promoted themselves to the trustees or\n                sponsors of one or more unrelated schemes as having expertise in\n                trustee matters generally (rather than just in certain areas),\n                whether they are paid for the expertise or not. Please see our\n                professional trustee description policy for a more detailed\n                explanation and examples.\n              </P>\n            </HelpLink>\n            <Hr cfg={{ mt: 9, mb: 5 }} />\n            <ArrowButton\n              title=\"Continue\"\n              pointsTo=\"right\"\n              iconSide=\"right\"\n              type=\"submit\"\n              cfg={{ my: 4 }}\n              disabled={\n                !(values[TRUSTEE_TYPE_BUTTONS] && values[PROF_TRUSTEE_BUTTONS])\n              }\n            />\n          </form>\n        )}\n      </Form>\n      <ScrollToTop />\n    </div>\n  );\n};\n\nexport default IndividualTrusteeStepTwo;\n","import React from 'react';\n\nconst AddressContext = React.createContext({\n  addressLine1: '',\n  setAddressLine1: (addressLine1: string) => {},\n  addressLine2: '',\n  setAddressLine2: (addressLine2: string) => {},\n  addressLine3: '',\n  setAddressLine3: (addressLine3: string) => {},\n  postTown: '',\n  setPostTown: (postTown: string) => {},\n  county: '',\n  setCounty: (county: string) => {},\n  postcode: '',\n  setPostcode: (postcode: string) => {},\n  country: 'UK',\n  setCountry: (country: string) => {},\n});\n\nexport default AddressContext;\n","import React, { useState } from 'react';\nimport AddressContext from './AddressContext';\n\nconst AddressProvider = (props: any) => {\n  const [addressLine1, setAddressLine1] = useState<string>('');\n  const [addressLine2, setAddressLine2] = useState<string>('');\n  const [addressLine3, setAddressLine3] = useState<string>('');\n  const [postTown, setPostTown] = useState<string>('');\n  const [county, setCounty] = useState<string>('');\n  const [postcode, setPostcode] = useState<string>('');\n  const [country, setCountry] = useState<string>('');\n\n  return (\n    <AddressContext.Provider\n      value={{\n        addressLine1,\n        setAddressLine1,\n        addressLine2,\n        setAddressLine2,\n        addressLine3,\n        setAddressLine3,\n        postTown,\n        setPostTown,\n        county,\n        setCounty,\n        postcode,\n        setPostcode,\n        country,\n        setCountry,\n      }}\n    >\n      {props.children}\n    </AddressContext.Provider>\n  );\n};\n\nexport default AddressProvider;\n","import React, { useState, Dispatch, SetStateAction } from 'react';\nimport Styles from '../Layout.module.scss';\nimport { ArrowLink } from '@tpr/layout';\nimport { useHistory } from 'react-router-dom';\nimport { H3, H1, Hr } from '@tpr/core';\nimport ScrollToTop from '../../components/ScrollToTop';\nimport PostcodeSearch from '../../components/AddressForm/PostcodeSearch';\nimport AddressSelect from '../../components/AddressForm/AddressSelect';\nimport AddressConfirmation from '../../components/AddressForm/AddressConfirmation';\nimport AddressProvider from '../../components/AddressForm/AddressProvider';\nimport { CardAddress } from '@tpr/layout/lib/components/cards/common/interfaces';\nimport { Form } from '@tpr/forms';\nimport { Trustee } from '@tpr/layout/lib/components/cards/trustee/context';\n\nconst IndividualTrusteeStepThree = (props: {\n  newTrustee: Trustee;\n  setNewTrustee: Dispatch<SetStateAction<Trustee>>;\n  nextPage: () => void;\n}) => {\n  const history = useHistory();\n\n  const [step, setStep] = useState<\n    'postcodeSearch' | 'selectAddress' | 'confirmAddress'\n  >('postcodeSearch');\n\n  const [address, setAddress] = useState<CardAddress>();\n\n  const DisplayForm = (pristine: boolean) => {\n    switch (step) {\n      case 'postcodeSearch':\n        return (\n          <PostcodeSearch\n            text={\"Enter the postcode of the trustee's address\"}\n          />\n        );\n\n      case 'selectAddress':\n        return (\n          <AddressSelect\n            postcode={address.postcode}\n            isPristine={pristine}\n            changePostcode={() => setStep('postcodeSearch')}\n          />\n        );\n\n      case 'confirmAddress':\n        return (\n          <AddressConfirmation\n            title=\"Trustee correspondence address\"\n            helpText=\"We'll use this address when we need to get in touch with this trustee.\"\n            address={{\n              addressLine1: address.addressLine1,\n              addressLine2: address.addressLine2,\n              addressLine3: address.addressLine3,\n              postTown: address.postTown,\n              county: address.county,\n              postcode: address.postcode,\n              country: address.country,\n              countryId: address.countryId,\n            }}\n            changeAddress={() => {\n              setStep('postcodeSearch');\n            }}\n          />\n        );\n      default:\n        console.warn('Invalid step');\n        break;\n    }\n  };\n\n  const onPostCodeSearchSubmit = (values: any) => {\n    setAddress({ ...address, postcode: values.postcodeSearch });\n    setStep('selectAddress');\n  };\n\n  const onAddressSelectSubmit = (values: any) => {\n    setAddress({ ...values.addressSelect.value });\n    setStep('confirmAddress');\n  };\n\n  const onAddressConfirmationSubmit = (values: any) => {\n    console.log('onAddressConfirmationSubmit values');\n    console.log(values);\n    props.setNewTrustee({\n      ...props.newTrustee,\n      addressLine1: values.addressLine1,\n      addressLine2: values.addressLine2,\n      addressLine3: address.addressLine3,\n      postTown: address.postTown,\n      postcode: address.postcode,\n      county: address.county,\n      country: address.country,\n      countryId: address.countryId,\n    });\n    props.nextPage();\n  };\n\n  const submit = (values: any) => {\n    switch (step) {\n      case 'postcodeSearch':\n        return onPostCodeSearchSubmit(values);\n      case 'selectAddress':\n        return onAddressSelectSubmit(values);\n      case 'confirmAddress':\n        return onAddressConfirmationSubmit(values);\n      default:\n        console.warn('Invalid step');\n        break;\n    }\n  };\n\n  return (\n    <div className={Styles.main}>\n      <ArrowLink\n        pointsTo=\"left\"\n        iconSide=\"left\"\n        title=\"Back\"\n        onClick={() => history.goBack()}\n        cfg={{ mt: 3 }}\n      />\n      <H3 cfg={{ mt: 2 }}>Add trustee: Individual</H3>\n      <H1 cfg={{ mt: 2, mb: 3 }}>What is this trustee's address?</H1>\n      <Hr cfg={{ mt: 4, mb: 5 }} />\n\n      <AddressProvider>\n        <Form\n          onSubmit={submit}\n          initialValues={{\n            addressLine1: address?.addressLine1,\n            addressLine2: address?.addressLine2,\n          }}\n        >\n          {({ handleSubmit, pristine }) => (\n            <form onSubmit={handleSubmit}>{DisplayForm(pristine)}</form>\n          )}\n        </Form>\n      </AddressProvider>\n\n      <ScrollToTop />\n    </div>\n  );\n};\n\nexport default IndividualTrusteeStepThree;\n","import React from 'react';\nimport Styles from '../Layout.module.scss';\nimport ScrollToTop from '../../components/ScrollToTop';\nimport { Form, SeparatorX, renderFields, FieldProps } from '@tpr/forms';\nimport { Hr, Flex, H1, H3 } from '@tpr/core';\nimport { ArrowButton, ArrowLink } from '@tpr/layout';\nimport { useHistory } from 'react-router-dom';\n\nconst IndividualTrusteeStepZero = (props: any) => {\n  const RADIO_BUTTONS = 'trusteeType';\n  const history = useHistory();\n  const fields: FieldProps[] = [\n    {\n      name: RADIO_BUTTONS,\n      type: 'radio',\n      label: 'Individual',\n      value: 'individual',\n    },\n    {\n      name: RADIO_BUTTONS,\n      type: 'radio',\n      label: 'Corporate',\n      value: 'corporate',\n    },\n  ];\n\n  const onSubmit = (values: any) => {\n    props.nextPage();\n  };\n\n  return (\n    <div className={Styles.main}>\n      <ArrowLink\n        iconSide=\"left\"\n        pointsTo=\"left\"\n        title=\"Back\"\n        onClick={() => {\n          history.goBack();\n        }}\n        cfg={{ mt: 3 }}\n      />\n      <H3 cfg={{ mt: 2 }}>Add trustee</H3>\n      <H1 cfg={{ mt: 2, mb: 3 }}>\n        Are you adding an individual or a corporate trustee?\n      </H1>\n      <Hr cfg={{ mt: 4, mb: 5 }} />\n      <Form onSubmit={onSubmit}>\n        {({ handleSubmit, pristine }) => (\n          <form onSubmit={handleSubmit}>\n            <Flex cfg={{ mt: 2, mb: 4 }}>\n              <SeparatorX>{renderFields(fields)}</SeparatorX>\n            </Flex>\n            <Hr cfg={{ mt: 8, mb: 4 }} />\n            <ArrowButton\n              cfg={{ my: 4 }}\n              pointsTo=\"right\"\n              iconSide=\"right\"\n              type=\"submit\"\n              title=\"Continue\"\n              disabled={pristine}\n            />\n          </form>\n        )}\n      </Form>\n      <ScrollToTop />\n    </div>\n  );\n};\n\nexport default IndividualTrusteeStepZero;\n","import React, { useState } from 'react';\nimport Styles from './Layout.module.scss';\nimport UserResearchSidebar from '../components/UserResearchSidebar';\nimport IndividualTrusteeStepFour from './AddIndividualTrustee/IndividualTrusteeStepFour';\nimport IndividualTrusteeStepOne from './AddIndividualTrustee/IndividualTrusteeStepOne';\nimport IndividualTrusteeStepTwo from './AddIndividualTrustee/IndividualTrusteeStepTwo';\nimport IndividualTrusteeStepThree from './AddIndividualTrustee/IndividualTrusteeStepThree';\nimport IndividualTrusteeStepZero from './AddIndividualTrustee/IndividualTrusteeStepZero';\nimport { Trustee } from '@tpr/layout/lib/components/cards/trustee/context';\n\nconst AddTrustee = () => {\n  const [state, setState] = useState<\n    'step-0' | 'step-1' | 'step-2' | 'step-3' | 'step-4'\n  >('step-0');\n\n  const [newTrustee, setNewTrustee] = useState<Trustee>();\n\n  const renderForm = () => {\n    switch (state) {\n      case 'step-0':\n        return (\n          <IndividualTrusteeStepZero\n            nextPage={() => setState('step-1')}\n            newTrustee={newTrustee}\n            setNewTrustee={setNewTrustee}\n          />\n        );\n      case 'step-1':\n        return (\n          <IndividualTrusteeStepOne\n            nextPage={() => setState('step-2')}\n            setNewTrustee={setNewTrustee}\n            newTrustee={newTrustee}\n          />\n        );\n      case 'step-2':\n        return (\n          <IndividualTrusteeStepTwo\n            nextPage={() => setState('step-3')}\n            setNewTrustee={setNewTrustee}\n            newTrustee={newTrustee}\n          />\n        );\n      case 'step-3':\n        return (\n          <IndividualTrusteeStepThree\n            nextPage={() => setState('step-4')}\n            setNewTrustee={setNewTrustee}\n            newTrustee={newTrustee}\n          />\n        );\n      case 'step-4':\n        return (\n          <IndividualTrusteeStepFour\n            setNewTrustee={setNewTrustee}\n            newTrustee={newTrustee}\n          />\n        );\n    }\n  };\n  return (\n    <div className={Styles.root}>\n      <UserResearchSidebar />\n      {renderForm()}\n    </div>\n  );\n};\n\nexport default AddTrustee;\n","import { createContext } from 'react';\n\nexport const S179Context = createContext<S179Context>({\n  data: {},\n  setData: () => {},\n});\n\nexport interface S179Context {\n  data: S179Data;\n  setData: () => void;\n}\n\nexport interface S179Data {\n  effectiveDate?: Date;\n  guidance?: string;\n  assumption?: string;\n  relevantAccounts?: Date;\n  TotalValue?: number;\n  PercentageOfAssets?: number;\n  ActiveLiabilities?: number;\n  ActiveInsurer?: number;\n  ActiveNumber?: number;\n  ActiveAge?: number;\n  DeferredLiabilities?: number;\n  DeferredInsurer?: number;\n  DeferredNumber?: number;\n  DeferredAge?: number;\n  PensionerLiabilities?: number;\n  PensionerInsurer?: number;\n  PensionerNumber?: number;\n  PensionerAge?: number;\n  WindingUpLiabilities?: number;\n  ExternalLiabilities?: number;\n  BenefitLiabilities?: number;\n  TotalProtectedLiabilities?: number;\n  ActivePre1997?: number;\n  ActivePreApril2009?: number;\n  ActivePostApril2009?: number;\n  DeferredPre1997?: number;\n  DeferredPreApril2009?: number;\n  DeferredPostApril2009?: number;\n  PensionersPre1997?: number;\n  PensionerPost1997?: number;\n}\n","import { Flex, H3, P, Span } from '@tpr/core';\nimport { FFInputCurrency, FFInputDate, FFInputNumber } from '@tpr/forms';\nimport { HelpLink } from '@tpr/layout';\nimport React from 'react';\n\nexport interface AssetsProps {\n  dateOfRelevantAccounts?: Date;\n}\n\nexport const Assets: React.FC<AssetsProps> = ({ dateOfRelevantAccounts }) => {\n  return (\n    <Flex cfg={{ my: 5, flexDirection: 'column' }}>\n      <H3 cfg={{ mb: 5 }}>Assets</H3>\n      <Flex cfg={{ flexDirection: 'column' }}>\n        <Flex cfg={{ flexDirection: 'column' }}>\n          <FFInputCurrency\n            name=\"TotalValue\"\n            before=\"£\"\n            label=\"Total value\"\n            hint=\"This figure should not be reduced by the amount of any external liabilities and should include contract of insurance.\"\n            inputWidth={2}\n            required\n          />\n\n          <Flex cfg={{ p: 6, bg: 'neutral.2', mt: 9, mb: 8 }}>\n            {dateOfRelevantAccounts ? (\n              <Flex cfg={{ flexDirection: 'column' }}>\n                <Span tag=\"h4\">Date of Relevant Accounts</Span>\n                <P>{dateOfRelevantAccounts.toLocaleDateString()}</P>\n              </Flex>\n            ) : (\n              <FFInputDate\n                name=\"Date of relevant accounts\"\n                label=\"Date of relevant accounts\"\n                hint=\"For example, 31 3 2019 or 31 03 2019\"\n                required\n              />\n            )}\n          </Flex>\n\n          <FFInputNumber\n            name=\"PercentageOfAssets\"\n            after=\"%\"\n            label=\"Percentage of assets held as contracts of insurance\"\n            inputWidth={1}\n            cfg={{ mb: 1 }}\n          />\n          <HelpLink title=\"Help with percentage of assets held as contracts of insurance\">\n            HelpLink content\n          </HelpLink>\n        </Flex>\n      </Flex>\n    </Flex>\n  );\n};\n","import { Flex, Link, P, Span } from '@tpr/core';\nimport { FFInputDate } from '@tpr/forms';\nimport React from 'react';\n\nexport interface EffectiveDateProps {\n  effectiveDate?: Date;\n  handleNewS179: () => void;\n}\n\nexport const EffectiveDate: React.FC<EffectiveDateProps> = ({\n  effectiveDate,\n  handleNewS179,\n}) => {\n  return (\n    <Flex cfg={{ flexDirection: 'column', bg: 'neutral.2', p: 6, mb: 7 }}>\n      <Span tag=\"h4\">Effective date of current S179 valuation</Span>\n\n      {effectiveDate ? (\n        <Flex cfg={{ justifyContent: 'space-between' }}>\n          <P>{effectiveDate.toLocaleDateString()}</P>\n          <Link onClick={handleNewS179} underline>\n            + Add new S179 valuation\n          </Link>\n        </Flex>\n      ) : (\n        <FFInputDate\n          name=\"EffectiveDate\"\n          hint=\"For example, 31 3 2019 or 21 03 2019\"\n        />\n      )}\n    </Flex>\n  );\n};\n","import { Flex, H2, P, Span } from '@tpr/core';\nimport { FFRadioButton } from '@tpr/forms';\nimport React from 'react';\n\nexport interface GuidanceAndAssumptionsProps {\n  guidance?: string;\n  assumption?: string;\n}\n\nexport const GuidanceAndAssumptions: React.FC<GuidanceAndAssumptionsProps> = ({\n  guidance,\n  assumption,\n}) => {\n  return (\n    <Flex cfg={{ flexDirection: 'column', mb: 7 }}>\n      <H2 cfg={{ mb: 4 }}>Guidance and Assumptions</H2>\n      <P>\n        These are the version numbers of the guidance and assumptions used to\n        calculate the valuation. The versions used depend on when the valuation\n        was made.\n      </P>\n      <Flex cfg={{ flexDirection: 'column', mt: 6 }}>\n        <Flex cfg={{ mb: 2 }}>\n          <fieldset>\n            <Span tag=\"h4\" cfg={{ mb: 3 }}>\n              S179 guidance used for this valuation\n            </Span>\n            {guidance ? (\n              <>\n                <P>{guidance}</P>\n              </>\n            ) : (\n              <>\n                <FFRadioButton value=\"G8\" label=\"G8\" name=\"Guidance\" />\n                <FFRadioButton value=\"G7\" label=\"G7\" name=\"Guidance\" />\n                <FFRadioButton value=\"G6\" label=\"G6\" name=\"Guidance\" />\n              </>\n            )}\n          </fieldset>\n        </Flex>\n        <Flex cfg={{ mt: 8 }}>\n          <fieldset>\n            <Span tag=\"h4\" cfg={{ mb: 3 }}>\n              S179 assumptions used for this valuation\n            </Span>\n            {assumption ? (\n              <>\n                <P>{assumption}</P>\n              </>\n            ) : (\n              <>\n                <FFRadioButton value=\"A9\" label=\"A9\" name=\"Assumptions\" />\n                <FFRadioButton value=\"A8\" label=\"A8\" name=\"Assumptions\" />{' '}\n              </>\n            )}\n          </fieldset>\n        </Flex>\n      </Flex>\n    </Flex>\n  );\n};\n","import { Hr, P } from '@tpr/core';\nimport { ArrowButton } from '@tpr/layout';\nimport React, { useContext } from 'react';\nimport { Assets } from '../Assets/Assets';\nimport { EffectiveDate } from '../EffectiveDate/EffectiveDate';\nimport { GuidanceAndAssumptions } from '../GuidanceAndAssumptions/GuidanceAndAssumptions';\nimport { S179Context } from '../Services/S179Context';\n\nexport interface Step1Props {\n  handleNextClick: () => void;\n}\n\nexport const Step1: React.FC<Step1Props> = ({ handleNextClick }) => {\n  const s179Context = useContext(S179Context);\n  return (\n    <>\n      <P cfg={{ mb: 7 }}>\n        The information in this section must be the same as the\n        <strong> most recent</strong> Section 179 (S179) certificate in the\n        scheme actuary's report to the trustees.\n      </P>\n      <EffectiveDate\n        effectiveDate={s179Context.data.effectiveDate}\n        handleNewS179={s179Context.setData}\n      />\n      <GuidanceAndAssumptions\n        guidance={s179Context.data.guidance}\n        assumption={s179Context.data.assumption}\n      />\n      <Assets dateOfRelevantAccounts={s179Context.data.relevantAccounts} />\n      <Hr cfg={{ my: 8 }} />\n      <ArrowButton\n        type=\"button\"\n        onClick={handleNextClick}\n        cfg={{ mb: 4 }}\n        pointsTo=\"right\"\n        iconSide=\"right\"\n        title=\"Continue\"\n      />\n    </>\n  );\n};\n","import { Flex, H3, Hr, P } from '@tpr/core';\nimport { FFInputCurrency, FFInputNumber } from '@tpr/forms';\nimport { HelpLink } from '@tpr/layout';\nimport React from 'react';\nimport styles from './Liabilities.module.scss';\n\nexport const Liabilities: React.FC = () => {\n  return (\n    <Flex>\n      <Flex cfg={{ ml: 2, flexDirection: 'column' }}>\n        <H3 cfg={{ mb: 4 }}>Liabilities</H3>\n        <P cfg={{ mb: 6 }}>\n          Do <strong>not </strong> include the expenses within the active,\n          deferred and pensioner components, even if this was the approach taken\n          in previous years. For insured liabilities, enter the percentage of\n          liabilities for members whose scheme benefits were fully matched by\n          deferred or immediate purchased in the name of the trustee(s).\n        </P>\n        <Flex cfg={{ flexDirection: 'row' }}>\n          <Flex cfg={{ flexDirection: 'row' }}>\n            <Flex\n              cfg={{ flexDirection: 'column', mr: 3, pt: 2 }}\n              className={`${styles.columns} ${styles.firstColumn}`}\n            >\n              <H3 cfg={{ mb: 3, fontSize: 3, fontWeight: 3 }}>\n                Protected liabilities\n              </H3>\n              <FFInputCurrency\n                name=\"ActiveLiabilities\"\n                inputWidth={7}\n                before=\"£\"\n                validate={(value: any) => {\n                  if (value <= 5.0) return 'value must be greater than 5';\n                }}\n                label=\"Active members\"\n                required\n                cfg={{ mb: 6 }}\n              />\n              <FFInputCurrency\n                name=\"DeferredLiabilities\"\n                inputWidth={7}\n                before=\"£\"\n                label=\"Deferred members\"\n                required\n                cfg={{ mb: 6 }}\n              />\n              <FFInputCurrency\n                name=\"PensionerLiabilities\"\n                inputWidth={7}\n                before=\"£\"\n                label=\"Pensioner members\"\n                required\n                cfg={{ mb: 6 }}\n              />\n              <FFInputCurrency\n                name=\"WindingUpLiabilities\"\n                inputWidth={7}\n                before=\"£\"\n                label=\"Estimated expenses of winding up\"\n                required\n                cfg={{ mb: 6 }}\n              />\n              <FFInputCurrency\n                name=\"ExternalLiabilities\"\n                inputWidth={7}\n                before=\"£\"\n                label=\"External liabilities\"\n                required\n                cfg={{ mb: 6 }}\n              />\n\n              <FFInputCurrency\n                name=\"BenefitLiabilities\"\n                inputWidth={7}\n                before=\"£\"\n                label=\"Estimated expenses of benefit installation/payment\"\n                required\n                cfg={{ mb: 6 }}\n              />\n              <Hr cfg={{ mb: 3, mt: 2 }} />\n              <FFInputCurrency\n                name=\"TotalProtectedLiabilities\"\n                inputWidth={7}\n                before=\"£\"\n                label=\"Total protected liabilities\"\n                required\n                cfg={{ mb: 6 }}\n              />\n            </Flex>\n            <Flex\n              cfg={{ flexDirection: 'column', pl: 3, pr: 3, pt: 2 }}\n              className={`${styles.columns} ${styles.secondColumn}`}\n            >\n              <H3 cfg={{ mb: 3, fontSize: 3, fontWeight: 3 }}>\n                Insured liabilities\n              </H3>\n              <FFInputNumber\n                type=\"number\"\n                name=\"ActiveInsurer\"\n                after=\"%\"\n                inputWidth={3}\n                label=\"Active members\"\n                required\n                cfg={{ mb: 6 }}\n              />\n              <FFInputNumber\n                type=\"number\"\n                name=\"DeferredInsurer\"\n                after=\"%\"\n                inputWidth={3}\n                label=\"Deferred members\"\n                required\n                cfg={{ mb: 6 }}\n              />\n              <FFInputNumber\n                type=\"number\"\n                name=\"PensionerInsurer\"\n                after=\"%\"\n                inputWidth={3}\n                label=\"Pensioner members\"\n                required\n                cfg={{ mb: 6 }}\n              />\n            </Flex>\n\n            <Flex\n              cfg={{ flexDirection: 'column', pl: 3, pr: 3, pt: 2 }}\n              className={`${styles.columns} ${styles.thirdColumn}`}\n            >\n              <H3 cfg={{ mb: 3, fontSize: 3, fontWeight: 3 }}>\n                Number of members\n              </H3>\n              <FFInputNumber\n                type=\"number\"\n                name=\"ActiveNumber\"\n                inputWidth={9}\n                label=\"Active members\"\n                required\n                cfg={{ mb: 6 }}\n              />\n              <FFInputNumber\n                type=\"number\"\n                name=\"DeferredNumber\"\n                inputWidth={9}\n                label=\"Deferred members\"\n                required\n                cfg={{ mb: 6 }}\n              />\n              <FFInputNumber\n                type=\"number\"\n                name=\"PensionerNumber\"\n                inputWidth={9}\n                label=\"Pensioner members\"\n                required\n                cfg={{ mb: 6 }}\n              />\n            </Flex>\n            <Flex\n              cfg={{ flexDirection: 'column', pl: 3, pr: 3, pt: 2 }}\n              className={` ${styles.columns} ${styles.forthColumn}`}\n            >\n              <H3 cfg={{ mb: 3, fontSize: 3, fontWeight: 3 }}>Average ages</H3>\n              <FFInputNumber\n                type=\"number\"\n                name=\"ActiveAge\"\n                inputWidth={3}\n                label=\"Active members\"\n                required\n                cfg={{ mb: 6 }}\n              />\n              <FFInputNumber\n                type=\"number\"\n                name=\"DeferredAge\"\n                inputWidth={3}\n                cfg={{ mb: 6 }}\n              />\n              <FFInputNumber\n                type=\"number\"\n                name=\"PensionerAge\"\n                inputWidth={3}\n                cfg={{ mb: 6 }}\n              />\n            </Flex>\n          </Flex>\n        </Flex>\n        <HelpLink title=\"Help with liabilities\">Help text content</HelpLink>\n      </Flex>\n    </Flex>\n  );\n};\n","import { Flex, H2, H3, H4, Hr, P, Span } from '@tpr/core';\nimport { FFInputNumber } from '@tpr/forms';\nimport { HelpLink } from '@tpr/layout';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { S179Context } from '../Services/S179Context';\nimport styles from './ProportionOfLiabilities.module.scss';\n\nexport const ProportionOfLiabilities: React.FC = () => {\n  const s179Context = useContext(S179Context);\n\n  const [activeTotal, setActiveTotal] = useState(0);\n\n  const [deferredTotal, setDeferredTotal] = useState<number>(0);\n\n  const [pensionerTotal, setPensionerTotal] = useState<number>(0);\n\n  const [ActivePre1997, setActivePre1997] = useState<number>(\n    s179Context.data.ActivePre1997,\n  );\n  const [ActivePre2009, setActivePre2009] = useState<number>(\n    s179Context.data.ActivePreApril2009,\n  );\n  const [ActivePost2009, setActivePost2009] = useState<number>(\n    s179Context.data.ActivePostApril2009,\n  );\n  const [DeferredPre1997, setDeferredPre1997] = useState<number>(\n    s179Context.data.DeferredPre1997,\n  );\n  const [DeferredPre2009, setDeferredPre2009] = useState<number>(\n    s179Context.data.DeferredPreApril2009,\n  );\n  const [DeferredPost2009, setDeferredPost2009] = useState<number>(\n    s179Context.data.DeferredPostApril2009,\n  );\n  const [PensionerPre1997, setPensionerPre1997] = useState<number>(\n    s179Context.data.PensionersPre1997,\n  );\n  const [PensionerPost2009, setPensionerPost2009] = useState<number>(\n    s179Context.data.PensionerPost1997,\n  );\n\n  useEffect(() => {\n    const activeTotal =\n      Number(ActivePre1997) + Number(ActivePre2009) + Number(ActivePost2009);\n    setActiveTotal(activeTotal);\n  }, [ActivePre1997, ActivePre2009, ActivePost2009]);\n\n  useEffect(() => {\n    const deferredTotal =\n      Number(DeferredPre1997) +\n      Number(DeferredPre2009) +\n      Number(DeferredPost2009);\n    setDeferredTotal(deferredTotal);\n  }, [DeferredPre1997, DeferredPre2009, DeferredPost2009]);\n\n  useEffect(() => {\n    const pensionerTotal = Number(PensionerPre1997) + Number(PensionerPost2009);\n    setPensionerTotal(pensionerTotal);\n  }, [PensionerPre1997, PensionerPost2009]);\n\n  useEffect(() => {\n    const deferredTotal =\n      Number(s179Context.data.DeferredPre1997) +\n      Number(s179Context.data.DeferredPreApril2009) +\n      Number(s179Context.data.DeferredPostApril2009);\n    setDeferredTotal(deferredTotal);\n\n    const activeTotal =\n      Number(s179Context.data.ActivePre1997) +\n      Number(s179Context.data.ActivePreApril2009) +\n      Number(s179Context.data.ActivePostApril2009);\n    setActiveTotal(activeTotal);\n\n    const pensionerTotal =\n      Number(s179Context.data.PensionersPre1997) +\n      Number(s179Context.data.PensionerPost1997);\n    setPensionerTotal(pensionerTotal);\n  }, [\n    s179Context.data.DeferredPre1997,\n    s179Context.data.DeferredPreApril2009,\n    s179Context.data.DeferredPostApril2009,\n    s179Context.data.ActivePre1997,\n    s179Context.data.ActivePreApril2009,\n    s179Context.data.ActivePostApril2009,\n    s179Context.data.PensionersPre1997,\n    s179Context.data.PensionerPost1997,\n  ]);\n\n  return (\n    <Flex cfg={{ flexDirection: 'column' }}>\n      <H2 cfg={{ mt: 6, mb: 2 }}>Proportion of Liabilities</H2>\n      <P>\n        Enter the percentage of liabilities for each member type. Total for each\n        member must equal 100%\n      </P>\n      <Flex cfg={{ flexDirection: 'column', mt: 5 }}>\n        <Flex cfg={{ flexDirection: 'row', my: 1 }}>\n          <Flex className={styles.columns}>\n            <H3 className={styles.rowTitle}>Active Members</H3>\n            <FFInputNumber\n              name=\"ActivePre1997\"\n              label=\"Pre 6 April 1997\"\n              inputWidth={2}\n              after=\"%\"\n              callback={(event: any) => {\n                setActivePre1997(Number(event.target.value));\n              }}\n              required\n              cfg={{ mt: 1, mb: 5 }}\n            />\n            <FFInputNumber\n              type=\"number\"\n              name=\"ActivePreApril2009\"\n              label=\"6 April 1997 to 5 April 2009\"\n              after=\"%\"\n              inputWidth={2}\n              callback={(event: any) => setActivePre2009(event.target.value)}\n              required\n              cfg={{ mt: 1, mb: 5 }}\n            />\n            <FFInputNumber\n              type=\"number\"\n              name=\"ActivePostApril2009\"\n              label=\"Post 5 April 2009\"\n              inputWidth={2}\n              after=\"%\"\n              callback={(event: any) => setActivePost2009(event.target.value)}\n              required\n              cfg={{ mt: 1, mb: 5 }}\n            />\n            <Flex cfg={{ flexDirection: 'column', my: 1 }}>\n              <Hr cfg={{ mt: 3, mb: 2 }} />\n              <H4>Active Members Total</H4>\n              <P>This total automatically updates as you type.</P>\n              <Span tag=\"h4\">{isNaN(activeTotal) ? 0 : activeTotal}%</Span>\n            </Flex>\n          </Flex>\n          <Flex className={styles.columns}>\n            <H3 className={styles.rowTitle}>Deferred Members</H3>\n\n            <FFInputNumber\n              name=\"DeferredPre1997\"\n              label=\"Pre 6 April 1997\"\n              inputWidth={2}\n              after=\"%\"\n              callback={(event: any) => setDeferredPre1997(event.target.value)}\n              required\n              cfg={{ mt: 1, mb: 5 }}\n            />\n            <FFInputNumber\n              type=\"number\"\n              name=\"DeferredPreApril2009\"\n              label=\"6 April 1997 to 5 April 2009 (inclusive)\"\n              after=\"%\"\n              inputWidth={2}\n              callback={(event: any) => setDeferredPre2009(event.target.value)}\n              required\n              cfg={{ mt: 1, mb: 5 }}\n            />\n            <FFInputNumber\n              type=\"number\"\n              name=\"DeferredPostApril2009\"\n              label=\"Post 5 April 2009\"\n              inputWidth={2}\n              after=\"%\"\n              callback={(event: any) => setDeferredPost2009(event.target.value)}\n              required\n              cfg={{ mt: 1, mb: 5 }}\n            />\n            <Flex cfg={{ flexDirection: 'column', my: 1 }}>\n              <Hr cfg={{ mt: 3, mb: 2 }} />\n              <H4>Deferred Members Total</H4>\n              <P>This total automatically updates as you type.</P>\n              <Span tag=\"h4\">{isNaN(deferredTotal) ? 0 : deferredTotal}%</Span>\n            </Flex>\n          </Flex>\n          <Flex className={styles.columns}>\n            <H3 className={styles.rowTitle}>Pensioner Members</H3>\n\n            <FFInputNumber\n              name=\"PensionersPre1997\"\n              label=\"Pre 6 April 1997\"\n              inputWidth={2}\n              after=\"%\"\n              callback={(event: any) => setPensionerPre1997(event.target.value)}\n              required\n              cfg={{ mt: 1, mb: 5 }}\n            />\n\n            <FFInputNumber\n              type=\"number\"\n              name=\"PensionerPost1997\"\n              label=\"Post 5 April 1997\"\n              after=\"%\"\n              inputWidth={2}\n              callback={(event: any) =>\n                setPensionerPost2009(event.target.value)\n              }\n              required\n              cfg={{ mt: 1, mb: 5 }}\n            />\n\n            <Flex cfg={{ flex: '1 0 auto' }}></Flex>\n            <Hr cfg={{ mt: 3, mb: 1 }} />\n            <Flex cfg={{ flexDirection: 'column', my: 1 }}>\n              <H4>Pensioner Members Total</H4>\n              <P>This total automatically updates as you type.</P>\n              <Span tag=\"h4\">\n                {isNaN(pensionerTotal) ? 0 : pensionerTotal}%\n              </Span>\n            </Flex>\n          </Flex>\n        </Flex>\n        <HelpLink title=\"Help with proportion of liabilities\">\n          HelpLink content\n        </HelpLink>\n      </Flex>\n    </Flex>\n  );\n};\n","import { Flex, Hr } from '@tpr/core';\nimport { ArrowButton } from '@tpr/layout';\nimport React from 'react';\nimport { Liabilities } from '../Liabilities/Liabilities';\nimport { ProportionOfLiabilities } from '../ProportionOfLiabilities/ProportionOfLiabilities';\n\nexport interface Step2Props {\n  handleNextClick: () => void;\n}\n\nexport const Step2: React.FC<Step2Props> = ({ handleNextClick }) => {\n  return (\n    <>\n      <Liabilities />\n      <ProportionOfLiabilities />\n      <Hr cfg={{ mt: 9, mb: 7 }} />\n      <Flex>\n        <ArrowButton\n          type=\"button\"\n          cfg={{ my: 3 }}\n          onClick={handleNextClick}\n          title=\"Continue\"\n          iconSide=\"right\"\n          pointsTo=\"right\"\n        />\n      </Flex>\n    </>\n  );\n};\n","import { Flex, H2, P } from '@tpr/core';\nimport { FFInputCurrency } from '@tpr/forms';\nimport React from 'react';\n\nexport const BespokeInvestment: React.FC = () => {\n  return (\n    <>\n      <H2 cfg={{ mt: 5, mb: 2 }}>\n        Bespoke investment risk calculation for PPF purposes\n      </H2>\n      <P>\n        Schemes with liabilities of £1.5 billion or more must submit the results\n        of a bespoke investment risk calculation. Schemes with liabilities of\n        less than £1.5 billion can submit their results voluntarily. Enter the\n        values as detailed in the most recently available audited scheme\n        accounts.\n      </P>\n      <Flex cfg={{ flexDirection: 'column' }}>\n        <FFInputCurrency\n          before=\"£\"\n          name=\"StressedAssets\"\n          label=\"Stressed asset value\"\n          inputWidth={2}\n        />\n\n        <FFInputCurrency\n          before=\"£\"\n          name=\"UnstressedAssets\"\n          label=\"Unstressed asset value\"\n          inputWidth={2}\n        />\n      </Flex>\n    </>\n  );\n};\n","import { Hr } from '@tpr/core';\nimport { ArrowButton } from '@tpr/layout';\nimport React from 'react';\nimport { BespokeInvestment } from '../BespokeInvestment/BespokeInvestment';\n\nexport interface Step3Props {}\n\nexport const Step3: React.FC<Step3Props> = () => {\n  return (\n    <>\n      <BespokeInvestment />\n      <Hr cfg={{ my: 8 }} />\n      <ArrowButton\n        type=\"submit\"\n        iconSide=\"right\"\n        pointsTo=\"right\"\n        title=\"Save and Continue\"\n      />\n    </>\n  );\n};\n","import { Flex, H1, Hr, Span } from '@tpr/core';\nimport { Form } from '@tpr/forms';\nimport { ArrowLink } from '@tpr/layout';\nimport React, { useState } from 'react';\nimport { S179Context, S179Data } from './Services/S179Context';\nimport { Step1 } from './views/Step1';\nimport { Step2 } from './views/Step2';\nimport { Step3 } from './views/Step3';\nimport styles from './s179.module.scss';\n\nexport const S179: React.FC = () => {\n  type steps = 'step1' | 'step2' | 'step3';\n\n  const [currentStep, setStep] = useState<steps>('step1');\n\n  const [initialData, setInitialData] = useState<S179Data>({\n    effectiveDate: new Date('2021-04-13'),\n    guidance: 'G8',\n    assumption: 'A8',\n    relevantAccounts: new Date('2018-9-30'),\n    TotalValue: 34682000.0,\n    PercentageOfAssets: -1.6,\n    ActiveLiabilities: 1400000000,\n    ActiveInsurer: 0,\n    ActiveNumber: 0,\n    ActiveAge: 0,\n    DeferredLiabilities: 22950000,\n    DeferredInsurer: 0,\n    DeferredNumber: 103,\n    DeferredAge: 49,\n    PensionerLiabilities: 86994000,\n    PensionerInsurer: 83,\n    PensionerNumber: 48,\n    PensionerAge: 71,\n    WindingUpLiabilities: 949000,\n    ExternalLiabilities: 0,\n    BenefitLiabilities: 135000,\n    TotalProtectedLiabilities: 100000,\n    ActivePre1997: 0,\n    ActivePreApril2009: 0,\n    ActivePostApril2009: 0,\n    DeferredPre1997: 11,\n    DeferredPreApril2009: 74,\n    DeferredPostApril2009: 15,\n    PensionersPre1997: 29,\n    PensionerPost1997: 71,\n  });\n\n  const selectForm = (currentStep: steps) => {\n    switch (currentStep) {\n      case 'step1':\n        return <Step1 handleNextClick={() => setStep('step2')} />;\n      case 'step2':\n        return <Step2 handleNextClick={() => setStep('step3')} />;\n      case 'step3':\n        return <Step3 />;\n      default:\n        return;\n    }\n  };\n\n  const selectHeading = (currentStep: steps) => {\n    switch (currentStep) {\n      case 'step1':\n        return 'Guidance, assumptions and assets';\n      case 'step2':\n        return 'Liabilities and Proportions';\n      case 'step3':\n        return 'Bespoke investment risk calculation for PPF purposes';\n      default:\n        return <></>;\n    }\n  };\n\n  return (\n    <S179Context.Provider\n      value={{\n        data: initialData,\n        setData: () => setInitialData({}),\n      }}\n    >\n      <Flex cfg={{ pt: 8, px: 6, pb: 10, flexDirection: 'column' }}>\n        <ArrowLink\n          onClick={() => {\n            if (currentStep === 'step2') {\n              setStep('step1');\n            } else if (currentStep === 'step3') {\n              setStep('step2');\n            }\n          }}\n          pointsTo=\"left\"\n          iconSide=\"left\"\n          cfg={{ mt: 2 }}\n        >\n          Back\n        </ArrowLink>\n        <Span\n          cfg={{ fontWeight: 2, fontSize: 4, color: 'neutral.6' }}\n          className={styles.sectionTitle}\n        >\n          Add new S179 valuation\n        </Span>\n        <H1 cfg={{ mt: 1 }}>{selectHeading(currentStep)}</H1>\n        <Hr cfg={{ mb: 5 }} />\n        <Form\n          onSubmit={(values: any) => console.log(values)}\n          initialValues={{ ...initialData }}\n        >\n          {({ handleSubmit }) => (\n            <form onSubmit={handleSubmit}>{selectForm(currentStep)}</form>\n          )}\n        </Form>\n      </Flex>\n    </S179Context.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport { AppWidth, DocWidth } from '@tpr/core';\nimport { Header, Footer, Highlight, BetaHeader } from '@tpr/layout';\nimport { Route, Switch } from 'react-router-dom';\nimport HomePage from './views/Home';\nimport Typography from './views/Typography';\nimport About from './views/About';\nimport InitialQuestions from './views/InitialQuestions';\nimport WoundUpConfirmation from './views/WoundUpConfirmation';\nimport SchemeWoundUp from './views/SchemeWoundUp';\nimport SchemeStatusAndMembership from './views/SchemeStatusAndMembership';\nimport ElectronicComsConsent from './views/ElectronicComsConsent';\nimport SchemeNameAndAddress from './views/SchemeNameAndAddress';\nimport Trustees from './views/Trustees';\nimport AddTrustee from './views/AddTrustee';\nimport StateContext from './StateContext';\nimport { S179 } from './views/S179/S179';\n\nfunction App() {\n  const AppState = useContext(StateContext);\n\n  return (\n    <div>\n      <BetaHeader text=\"This is a new service - your feedback will help us improve it.\" />\n      <Header\n        logoHref={\n          'https://www.thepensionsregulator.gov.uk/-/media/thepensionsregulator/images/logo/tpr-logo-header.ashx'\n        }\n        title={'Scheme Return'}\n        logoSrc=\"\"\n        schemeOptionsHref=\"\"\n        onClickLogout={() => {\n          console.log('Logout clicked');\n        }}\n      />\n      <Highlight\n        name={`Scheme Name: ${AppState.schemeName}`}\n        psr={AppState.psr.toString()}\n      />\n\n      <DocWidth>\n        <AppWidth>\n          <Switch>\n            <Route exact path=\"/\" component={() => <HomePage />} />\n            <Route path=\"/typography\" component={() => <Typography />} />\n            <Route path=\"/about\" component={() => <About />} />\n            <Route\n              exact\n              path=\"/initial-questions\"\n              component={() => <InitialQuestions />}\n            />\n            <Route\n              exact\n              path=\"/initial-questions/scheme-wound-up\"\n              component={() => <SchemeWoundUp />}\n            />\n            <Route\n              path=\"/initial-questions/scheme-wound-up/wound-up-confirmation\"\n              component={() => <WoundUpConfirmation />}\n            />\n            <Route\n              exact\n              path=\"/scheme-status-and-membership\"\n              component={() => <SchemeStatusAndMembership />}\n            />\n            <Route\n              exact\n              path=\"/consent-to-electronic-communication\"\n              component={() => <ElectronicComsConsent />}\n            />\n            <Route\n              exact\n              path=\"/scheme-name-and-address\"\n              component={() => <SchemeNameAndAddress />}\n            />\n            <Route exact path=\"/trustees\" component={() => <Trustees />} />\n            <Route\n              exact\n              path=\"/trustees/add-trustee\"\n              component={() => <AddTrustee />}\n            />\n            <Route exact path=\"/s179\" component={() => <S179 />} />\n          </Switch>\n        </AppWidth>\n      </DocWidth>\n\n      <Footer\n        logoUrl=\"https://www.thepensionsregulator.gov.uk/-/media/thepensionsregulator/images/logo/tpr-logo-footer.ashx\"\n        links={[\n          {\n            title: 'Accessibility',\n            url:\n              'https://www.thepensionsregulator.gov.uk/en/website-policies/accessibility-statement',\n          },\n          {\n            title: 'Contact Us',\n            url: 'https://www.thepensionsregulator.gov.uk/en/contact-us',\n          },\n          {\n            title: 'Website Policies',\n            url: 'https://www.thepensionsregulator.gov.uk/en/website-policies',\n          },\n        ]}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { CardAddress } from '@tpr/layout/lib/components/cards/common/interfaces';\nimport React, { useState } from 'react';\nimport StateContext from './StateContext';\n\nconst StateProvider = (props: any) => {\n  const [psr, setPsr] = useState(1000100398);\n  const [schemeName, setSchemeName] = useState('The Top Pension Scheme');\n  const [schemeAddress, setSchemeAddress] = useState<CardAddress>({\n    addressLine1: 'The Pensions Regulator',\n    addressLine2: 'Napier House',\n    addressLine3: 'Trafalgar Place',\n    postTown: 'Brighton',\n    county: 'East Sussex',\n    postcode: 'BN1 4DW',\n    country: 'GB',\n    countryId: 2,\n  });\n  const [activeMembers, setActiveMembers] = useState(30);\n  const [deferredMembers, setDeferredMembers] = useState(20);\n  const [membershipEffective, setMembershipEffective] = useState(\n    new Date('2018-04-19'),\n  );\n  const [pensionerMembers, setPensionerMembers] = useState(100);\n  const [schemeStatus, setSchemeStatus] = useState('open');\n  const [schemeStatusApplied, setSchemeStatusApplied] = useState(\n    new Date('2019-04-11'),\n  );\n  const [totalMembers, setTotalMembers] = useState(150);\n  const [electronicConsent, setElectronicConsent] = useState('yes');\n\n  return (\n    <StateContext.Provider\n      value={{\n        psr,\n        setPsr,\n        schemeName,\n        setSchemeName,\n        schemeAddress,\n        setSchemeAddress,\n        activeMembers,\n        setActiveMembers,\n        deferredMembers,\n        setDeferredMembers,\n        membershipEffective,\n        setMembershipEffective: (newDate: string) =>\n          setMembershipEffective(new Date(newDate)),\n        pensionerMembers,\n        setPensionerMembers,\n        schemeStatus,\n        setSchemeStatus,\n        schemeStatusApplied,\n        setSchemeStatusApplied: (newDate: string) =>\n          setSchemeStatusApplied(new Date(newDate)),\n        totalMembers,\n        setTotalMembers,\n        electronicConsent,\n        setElectronicConsent,\n      }}\n    >\n      {props.children}\n    </StateContext.Provider>\n  );\n};\n\nexport default StateProvider;\n","import React, { useReducer } from 'react';\nimport SidebarContext, { Actions } from './SidebarContext';\n\nconst SidebarProvider = (props: any) => {\n  const sectionCompletedState = new Array(8);\n  sectionCompletedState.fill(false);\n\n  const [state, dispatch] = useReducer(\n    (sectionCompletedState: any[], action: Actions) => {\n      switch (action.type) {\n        case 'COMPLETE':\n          sectionCompletedState[action.index] = true;\n          return { ...sectionCompletedState };\n      }\n    },\n    sectionCompletedState,\n  );\n\n  return (\n    <SidebarContext.Provider value={{ state, dispatch }}>\n      {props.children}\n    </SidebarContext.Provider>\n  );\n};\n\nexport default SidebarProvider;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.module.scss';\nimport ThemeProvider from '@tpr/theming';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport StateProvider from './StateProvider';\nimport SidebarProvider from './components/SidebarContextProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider>\n      <StateProvider>\n        <SidebarProvider>\n          <Router basename={`${process.env.PUBLIC_URL}`}>\n            <App />\n          </Router>\n        </SidebarProvider>\n      </StateProvider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"firstColumn\":\"Liabilities_firstColumn__1KB6Z\",\"secondColumn\":\"Liabilities_secondColumn__1wEEc\",\"thirdColumn\":\"Liabilities_thirdColumn__Mxb9l\",\"forthColumn\":\"Liabilities_forthColumn__2zaYO\",\"columns\":\"Liabilities_columns__2F2VB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"columns\":\"ProportionOfLiabilities_columns__3wG6q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Spacing_root__179iQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Layout_root__vcvgk\",\"main\":\"Layout_main__18W36\",\"flexColumn\":\"Layout_flexColumn__rOHR_\",\"backToTop\":\"Layout_backToTop__chjFm\",\"warningBox\":\"Layout_warningBox__1Ps8B\",\"radioButtons\":\"Layout_radioButtons__1PcBf\",\"confirmationInfoBox\":\"Layout_confirmationInfoBox__3wmwg\"};"],"sourceRoot":""}