{"version":3,"sources":["components/Spacing.module.scss","views/Typography.module.scss","views/Layout.module.scss","views/Home.tsx","components/TextInputExample.tsx","components/SelectInputExample.tsx","components/RadioButtonExample.tsx","components/NumberInputExample.tsx","components/DateInputExample.tsx","components/CheckboxInputExample.tsx","components/ButtonSizeExample.tsx","components/ButtonAppearanceExample.tsx","components/ButtonAppearanceOutlinedExample.tsx","components/ButtonSizeAndAppearanceExample.tsx","views/Typography.tsx","views/About.tsx","views/InitialQuestions.tsx","views/WoundUpConfirmation.tsx","views/SchemeWoundUp.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","HomePage","className","Styles","root","main","cfg","mb","title","importantMessage","mt","my","list","backToTop","iconSide","pointsTo","onClick","console","log","mr","TextInputExample","fields","type","name","label","hint","error","value","_fields","undefined","placeholder","inputWidth","onSubmit","validate","handleSubmit","renderFields","style","display","children","SelectInputExample","required","options","RadioButtonExample","initialValues","radioButton","NumberInputExample","DateInputExample","CheckboxInputExample","ButtonSizeExample","size","ButtonAppearanceExample","intent","disabled","ButtonAppearanceOutlinedExample","appearance","ButtonSizeAndAppearanceExample","Typography","componentList","grouping","component","tag","About","target","href","InitialQuestions","history","useHistory","window","location","formValues","push","schemeWoundUp","pristine","radioButtons","WoundUpConfirmation","confirmationInfoBox","SchemeWoundUp","warningBox","underline","App","warn","process","text","logoUrl","onClickSchemeOptions","onClickLogout","psr","exact","path","Home","onLinkClickHandler","url","links","Boolean","hostname","match","ReactDOM","render","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.939146f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Spacing_root__179iQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Typography_root__V-BbL\",\"componentList\":\"Typography_componentList__3Xb5C\",\"grouping\":\"Typography_grouping__1nEIs\",\"component\":\"Typography_component__1npUH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Layout_root__vcvgk\",\"main\":\"Layout_main__18W36\",\"list\":\"Layout_list__3y066\",\"backToTop\":\"Layout_backToTop__chjFm\",\"warningBox\":\"Layout_warningBox__1Ps8B\",\"radioButtons\":\"Layout_radioButtons__1PcBf\",\"confirmationInfoBox\":\"Layout_confirmationInfoBox__3wmwg\"};","import React from 'react';\nimport { H1, Hr, H2, P } from '@tpr/core';\nimport { Info, ArrowLink } from '@tpr/layout';\nimport Styles from './Layout.module.scss';\n\nconst HomePage = () => (\n  <div className={Styles.root}>\n    <div className={Styles.main}>\n      <H1 cfg={{ mb: 6 }}>Scheme Return</H1>\n      <Hr cfg={{ mb: 10 }} />\n      <Info title=\"Due Date\" importantMessage=\"Important\">\n        <P cfg={{ mb: 1 }}>The scheme return for this scheme is due.</P>\n        <P cfg={{ mt: 2 }}>\n          You must submit the completed scheme return by{' '}\n          <strong>31 March 2021</strong>.\n        </P>\n      </Info>\n      <Hr cfg={{ mt: 6 }} />\n      <H2 cfg={{ mt: 9 }}>Before you start</H2>\n      <P cfg={{ my: 4 }}>\n        Make sure you have the following information to hand:\n      </P>\n      <ul className={Styles.list}>\n        <li>number of members in the scheme</li>\n        <li>\n          any change to the name or contact details of the trustees, employer,\n          service providers or scheme return contact\n        </li>\n        <li>\n          charity or company name, Companies House number or registered charity\n          number (for employer and trustees)\n        </li>\n      </ul>\n      <Hr cfg={{ my: 5 }} />\n      <div className={Styles.backToTop}>\n        <ArrowLink\n          iconSide=\"left\"\n          pointsTo=\"up\"\n          onClick={() => console.log('clicked')}\n          cfg={{ mr: 3 }}\n          title=\"Back to top\"\n        />\n      </div>\n    </div>\n  </div>\n);\n\nexport default HomePage;\n","import React from 'react';\nimport { Form, validate, renderFields } from '@tpr/forms';\n\nconst TextInputExample = () => {\n  const fields: any[] = [\n    {\n      type: 'text',\n      name: 'event_place',\n      label: 'Event Location',\n      hint: 'The location must be London',\n      error: (value: any, _fields: any) => {\n        return value === 'London' ? undefined : 'Must be London';\n      },\n      placeholder: 'add some text here...',\n      inputWidth: 5,\n      cfg: { my: 5 },\n    },\n    {\n      type: 'text',\n      name: 'event_name',\n      label: 'Event name',\n      error: 'Enter an event name',\n      placeholder: 'add some text here...',\n      inputWidth: 5,\n      cfg: { my: 5 },\n    },\n  ];\n  return (\n    <Form onSubmit={console.log} validate={validate(fields)}>\n      {({ handleSubmit }) => (\n        <form onSubmit={handleSubmit}>\n          {renderFields(fields)}\n          <button type=\"submit\" style={{ display: 'none' }} children=\"Submit\" />\n        </form>\n      )}\n    </Form>\n  );\n};\n\nexport default TextInputExample;\n","import React from 'react';\nimport { FFSelect, Form } from '@tpr/forms';\nimport { P } from '@tpr/core';\nimport Styles from './Spacing.module.scss';\n\nconst SelectInputExample = () => (\n  <div>\n    <Form onSubmit={console.log}>\n      {({ handleSubmit }) => (\n        <form onSubmit={handleSubmit}>\n          <FFSelect\n            required\n            name={'animal'}\n            label=\"Select animal\"\n            hint=\"Please select an animal from the dropdown menu\"\n            options={[\n              { label: 'Seal', value: 1 },\n              { label: 'Warthog', value: 2 },\n              { label: 'kangaroo', value: 3 },\n              { label: 'Guinea Pig', value: 4 },\n            ]}\n          />\n        </form>\n      )}\n    </Form>\n    <P className={Styles.root}>Dropdown boxes can be optional</P>\n    <Form onSubmit={console.log}>\n      {({ handleSubmit }) => (\n        <form onSubmit={handleSubmit}>\n          <FFSelect\n            name={'animal'}\n            label=\"Select animal\"\n            hint=\"Please select an animal from the dropdown menu\"\n            options={[\n              { label: 'Seal', value: 1 },\n              { label: 'Warthog', value: 2 },\n              { label: 'kangaroo', value: 3 },\n              { label: 'Guinea Pig', value: 4 },\n            ]}\n          />\n        </form>\n      )}\n    </Form>\n  </div>\n);\n\nexport default SelectInputExample;\n","import React from 'react';\nimport { Form, FFRadioButton } from '@tpr/forms';\n\nconst RadioButtonExample = () => (\n  <Form onSubmit={console.log} initialValues={{ radioButton: 'value3' }}>\n    {({ handleSubmit }) => (\n      <form onSubmit={handleSubmit}>\n        <FFRadioButton name=\"radioButton\" label=\"option1\" value=\"value1\" />\n        <FFRadioButton\n          name=\"radioButton\"\n          label=\"option2\"\n          value=\"value2\"\n          hint=\"Text can be added to prompt the user\"\n        />\n        <FFRadioButton\n          name=\"radioButton\"\n          label=\"option3\"\n          value=\"value3\"\n          hint=\"One radio button can be preselected\"\n        />\n      </form>\n    )}\n  </Form>\n);\n\nexport default RadioButtonExample;\n","import React from 'react';\nimport { Form, FFInputNumber } from '@tpr/forms';\nimport { P } from '@tpr/core';\nimport Styles from './Spacing.module.scss';\n\nconst NumberInputExample = () => (\n  <div>\n    <P>Number inputs can be optional</P>\n    <Form onSubmit={console.log}>\n      {({ handleSubmit }) => (\n        <form onSubmit={handleSubmit}>\n          <FFInputNumber\n            required\n            name=\"FavNumberEntry\"\n            label=\"What is your favorite number?\"\n          />\n        </form>\n      )}\n    </Form>\n    <P className={Styles.root}>Number inputs can have validation</P>\n    <Form onSubmit={console.log}>\n      {({ handleSubmit }) => (\n        <form onSubmit={handleSubmit}>\n          <FFInputNumber\n            required\n            name=\"FavNumberEntry\"\n            label=\"What is your favorite number?\"\n            hint=\"Your favorite number must be between 0 and 9\"\n            validate={(value) => {\n              if (value < 0 || value > 9 || (!value && value !== 0)) {\n                return 'Must be between 0 and 9';\n              }\n            }}\n          />\n        </form>\n      )}\n    </Form>\n  </div>\n);\n\nexport default NumberInputExample;\n","import React from 'react';\nimport { Form, FFInputDate } from '@tpr/forms';\nimport { P } from '@tpr/core';\nimport Styles from './Spacing.module.scss';\n\nconst DateInputExample = () => (\n  <div>\n    <Form onSubmit={console.log}>\n      {({ handleSubmit }) => (\n        <form onSubmit={handleSubmit}>\n          <FFInputDate required name=\"DoB entry\" label=\"When were you born?\" />\n        </form>\n      )}\n    </Form>\n    <P className={Styles.root}>Date fields can be optional</P>\n    <Form onSubmit={console.log}>\n      {({ handleSubmit }) => (\n        <form onSubmit={handleSubmit}>\n          <FFInputDate name=\"DoB entry\" label=\"When were you born?\" />\n        </form>\n      )}\n    </Form>\n  </div>\n);\n\nexport default DateInputExample;\n","import React from 'react';\nimport { Form, FFCheckbox } from '@tpr/forms';\n\nconst CheckboxInputExample = () => (\n  <Form onSubmit={console.log} initialValues={{ 'checkbox-c': true }}>\n    {({ handleSubmit }) => (\n      <form onSubmit={handleSubmit}>\n        <FFCheckbox name=\"checkbox-a\" label=\"Option 1\" />\n        <FFCheckbox\n          name=\"checkbox-b\"\n          label=\"Option 2\"\n          hint=\"Text can be added to prompt the user\"\n        />\n        <FFCheckbox\n          name=\"checkbox-c\"\n          label=\"Option 3\"\n          hint=\"Checkboxes can be preselected\"\n        />\n      </form>\n    )}\n  </Form>\n);\n\nexport default CheckboxInputExample;\n","import React from 'react';\nimport { Button } from '@tpr/core';\n\nconst ButtonSizeExample = () => (\n  <div>\n    <Button size=\"large\" cfg={{ mr: 3 }}>\n      Large\n    </Button>\n    <Button size=\"medium\" cfg={{ mr: 3 }}>\n      Medium\n    </Button>\n    <Button size=\"small\" cfg={{ mr: 3 }}>\n      Small\n    </Button>\n  </div>\n);\n\nexport default ButtonSizeExample;\n","import React from 'react';\nimport { Button } from '@tpr/core';\n\nconst ButtonAppearanceExample = () => (\n  <div>\n    <Button intent=\"none\" cfg={{ mr: 3 }}>\n      Submit\n    </Button>\n    <Button intent=\"success\" cfg={{ mr: 3 }}>\n      Success\n    </Button>\n    <Button intent=\"danger\" cfg={{ mr: 3 }}>\n      Danger\n    </Button>\n    <Button intent=\"warning\" cfg={{ mr: 3 }}>\n      Warning\n    </Button>\n    <Button intent=\"special\" cfg={{ mr: 3 }}>\n      Special\n    </Button>\n    <Button intent=\"special\" cfg={{ mr: 3 }} disabled>\n      Disabled\n    </Button>\n  </div>\n);\n\nexport default ButtonAppearanceExample;\n","import React from 'react';\nimport { Button } from '@tpr/core';\n\nconst ButtonAppearanceOutlinedExample = () => (\n  <div>\n    <Button appearance=\"outlined\" intent=\"none\" cfg={{ mr: 3 }}>\n      Submit\n    </Button>\n    <Button appearance=\"outlined\" intent=\"success\" cfg={{ mr: 3 }}>\n      Success\n    </Button>\n    <Button appearance=\"outlined\" intent=\"danger\" cfg={{ mr: 3 }}>\n      Danger\n    </Button>\n    <Button appearance=\"outlined\" intent=\"warning\" cfg={{ mr: 3 }}>\n      Warning\n    </Button>\n    <Button appearance=\"outlined\" intent=\"special\" cfg={{ mr: 3 }}>\n      Special\n    </Button>\n    <Button appearance=\"outlined\" intent=\"special\" cfg={{ mr: 3 }} disabled>\n      Disabled\n    </Button>\n  </div>\n);\n\nexport default ButtonAppearanceOutlinedExample;\n","import React from 'react';\nimport { Button } from '@tpr/core';\n\nconst ButtonSizeAndAppearanceExample = () => (\n  <div>\n    <Button size=\"large\" appearance=\"outlined\" intent=\"none\" cfg={{ mr: 3 }}>\n      Large\n    </Button>\n    <Button\n      size=\"medium\"\n      appearance=\"outlined\"\n      intent=\"success\"\n      cfg={{ mr: 3 }}\n    >\n      Medium\n    </Button>\n    <Button size=\"small\" appearance=\"outlined\" intent=\"danger\" cfg={{ mr: 3 }}>\n      Small\n    </Button>\n    <Button size=\"large\" appearance=\"outlined\" intent=\"warning\" cfg={{ mr: 3 }}>\n      Large\n    </Button>\n    <Button\n      size=\"medium\"\n      appearance=\"outlined\"\n      intent=\"special\"\n      cfg={{ mr: 3 }}\n    >\n      Medium\n    </Button>\n    <Button\n      size=\"small\"\n      appearance=\"outlined\"\n      intent=\"special\"\n      cfg={{ mr: 3 }}\n      disabled\n    >\n      Small\n    </Button>\n  </div>\n);\n\nexport default ButtonSizeAndAppearanceExample;\n","import React from 'react';\nimport { H1, H2, H3, H4, H5, H6, P, Span, Text, Hr } from '@tpr/core';\nimport Styles from './Typography.module.scss';\nimport TextInputExample from '../components/TextInputExample';\nimport SelectInputExample from '../components/SelectInputExample';\nimport RadioButtonExample from '../components/RadioButtonExample';\nimport NumberInputExample from '../components/NumberInputExample';\nimport DateInputExample from '../components/DateInputExample';\nimport CheckboxInputExample from '../components/CheckboxInputExample';\nimport ButtonSizeExample from '../components/ButtonSizeExample';\nimport ButtonAppearanceExample from '../components/ButtonAppearanceExample';\nimport ButtonAppearanceOutlinedExample from '../components/ButtonAppearanceOutlinedExample';\nimport ButtonSizeAndAppearanceExample from '../components/ButtonSizeAndAppearanceExample';\n\nconst Typography = () => (\n  <div className={Styles.root}>\n    <div className={Styles.componentList}>\n      <H1>Component List</H1>\n      <div>\n        <H2>Typography</H2>\n        <div>\n          <div className={Styles.grouping}>\n            <H3>Headings</H3>\n            <div className={Styles.component}>\n              <H1>This is a h1 component</H1>\n              <Hr />\n            </div>\n            <div className={Styles.component}>\n              <H2>This is a h2 component</H2>\n              <Hr />\n            </div>\n            <div className={Styles.component}>\n              <H3>This is a H3 component</H3>\n              <Hr />\n            </div>\n            <div className={Styles.component}>\n              <H4>This is a H4 component</H4>\n              <Hr />\n            </div>\n            <div className={Styles.component}>\n              <H5>This is a H5 component</H5>\n              <Hr />\n            </div>\n            <div className={Styles.component}>\n              <H6>This is a H6 component</H6>\n              <Hr />\n            </div>\n          </div>\n          <div className={Styles.grouping}>\n            <H3>Text</H3>\n            <div className={Styles.component}>\n              <P>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed\n                lacinia interdum lectus. Quisque luctus metus non arcu lacinia,\n                a scelerisque elit porta. Etiam auctor vel urna vitae tristique.\n                Mauris vel urna semper, sagittis magna nec, consectetur est.\n                Phasellus pulvinar, nulla volutpat posuere tristique, purus\n                lorem consequat mi, a vestibulum diam erat et velit. Duis nec\n                faucibus tortor. Ut varius erat nec nisl mollis ultrices eu\n                sollicitudin turpis. Proin vulputate purus sit amet varius\n                posuere.\n              </P>\n              <P>This is a P component</P>\n            </div>\n            <div className={Styles.component}>\n              <Span>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed\n                lacinia interdum lectus. Quisque luctus metus non arcu lacinia,\n                a scelerisque elit porta. Etiam auctor vel urna vitae tristique.\n                Mauris vel urna semper, sagittis magna nec, consectetur est.\n                Phasellus pulvinar, nulla volutpat posuere tristique, purus\n                lorem consequat mi, a vestibulum diam erat et velit. Duis nec\n                faucibus tortor. Ut varius erat nec nisl mollis ultrices eu\n                sollicitudin turpis. Proin vulputate purus sit amet varius\n                posuere.\n              </Span>\n              <P>This is a Span component</P>\n            </div>\n            <div className={Styles.component}>\n              <Text tag=\"p\">\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed\n                lacinia interdum lectus. Quisque luctus metus non arcu lacinia,\n                a scelerisque elit porta. Etiam auctor vel urna vitae tristique.\n                Mauris vel urna semper, sagittis magna nec, consectetur est.\n                Phasellus pulvinar, nulla volutpat posuere tristique, purus\n                lorem consequat mi, a vestibulum diam erat et velit. Duis nec\n                faucibus tortor. Ut varius erat nec nisl mollis ultrices eu\n                sollicitudin turpis. Proin vulputate purus sit amet varius\n                posuere.\n              </Text>\n              <P>This is a Text component</P>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div>\n        <H2>Forms</H2>\n        <div className={Styles.grouping}>\n          <H3>Checkbox Input</H3>\n          <div className={Styles.component}>\n            <CheckboxInputExample />\n          </div>\n        </div>\n        <div className={Styles.grouping}>\n          <H3>Date Input</H3>\n          <div className={Styles.component}>\n            <DateInputExample />\n          </div>\n        </div>\n        <div className={Styles.grouping}>\n          <H3>Number Input</H3>\n          <div className={Styles.component}>\n            <NumberInputExample />\n          </div>\n        </div>\n        <div className={Styles.grouping}>\n          <H3 cfg={{ mb: 3 }}>Radiobutton</H3>\n          <div className={Styles.component}>\n            <RadioButtonExample />\n          </div>\n        </div>\n        <div className={Styles.grouping}>\n          <H3>Dropdown Menu</H3>\n          <div className={Styles.component}>\n            <SelectInputExample />\n          </div>\n        </div>\n        <div className={Styles.grouping}>\n          <H3>Text Input</H3>\n          <div className={Styles.component}>\n            <TextInputExample />\n          </div>\n        </div>\n      </div>\n      <H2>Buttons</H2>\n      <div className={Styles.grouping}>\n        <H3>Different Sizes</H3>\n        <div className={Styles.component}>\n          <ButtonSizeExample />\n        </div>\n        <H3>Different Appearances</H3>\n        <div className={Styles.component}>\n          <ButtonAppearanceExample />\n        </div>\n        <H3>Different Appearances Outlined</H3>\n        <div className={Styles.component}>\n          <ButtonAppearanceOutlinedExample />\n        </div>\n        <H3>Combining Size and Appearance</H3>\n        <div className={Styles.component}>\n          <ButtonSizeAndAppearanceExample />\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nexport default Typography;\n","import React from 'react';\nimport { H1, Link } from '@tpr/core';\n\nconst About = () => (\n  <div>\n    <H1>About Page</H1>\n    <Link>\n      <a target=\"_blanks\" href=\"https://tpr.netlify.app/\">\n        TPR React Components\n      </a>\n    </Link>\n  </div>\n);\n\nexport default About;\n","import React from 'react';\nimport Styles from './Layout.module.scss';\nimport { ArrowLink, ArrowButton } from '@tpr/layout';\nimport { H1, Hr, P } from '@tpr/core';\nimport { Form, renderFields, FieldProps } from '@tpr/forms';\nimport { useHistory } from 'react-router-dom';\n\nconst InitialQuestions = () => {\n  const FIELD_NAME = 'schemeWoundUp';\n\n  const fields: FieldProps[] = [\n    {\n      name: FIELD_NAME,\n      label: 'Yes',\n      value: 'yes',\n      type: 'radio',\n      cfg: { my: 4, mr: 4 },\n    },\n    {\n      name: FIELD_NAME,\n      label: 'No',\n      value: 'no',\n      type: 'radio',\n      cfg: { my: 4, mr: 4 },\n    },\n  ];\n\n  const history = useHistory();\n\n  const onSubmit = (formValues: any) => {\n    history.push(\n      formValues.schemeWoundUp === 'yes'\n        ? '/initial-questions/scheme-wound-up'\n        : '/',\n    );\n  };\n\n  return (\n    <div className={Styles.root}>\n      <div className={Styles.main}>\n        <ArrowLink\n          iconSide=\"left\"\n          pointsTo=\"left\"\n          onClick={() => {\n            window.location.href =\n              'https://exchange.thepensionsregulator.gov.uk/Members/SchemeListing.aspx';\n          }}\n        />\n        <H1>Check if you need to complete a scheme return</H1>\n        <Hr cfg={{ my: 2 }} />\n        <P cfg={{ my: 4 }}>\n          <b>Has this pension scheme been wound up and no longer exists?</b>\n        </P>\n        <P>\n          You should only choose 'yes' if the scheme no longer has any members,\n          assets or liabilities and the winding up\n        </P>\n        <P>\n          process has finished. If you're not sure, check the current details of\n          the scheme. (open in new window/tab)\n        </P>\n        <Form onSubmit={onSubmit}>\n          {({ handleSubmit, pristine }) => (\n            <form onSubmit={handleSubmit}>\n              <div className={Styles.radioButtons}>{renderFields(fields)}</div>\n              <Hr cfg={{ my: 8 }} />\n              <ArrowButton\n                type=\"submit\"\n                iconSide=\"right\"\n                pointsTo=\"right\"\n                title={'Continue'}\n                disabled={pristine}\n              />\n            </form>\n          )}\n        </Form>\n        <div className={Styles.backToTop}>\n          <ArrowLink\n            iconSide=\"left\"\n            pointsTo=\"up\"\n            onClick={() => console.log('clicked')}\n            cfg={{ mr: 3 }}\n            title=\"Back to top\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default InitialQuestions;\n","import React from 'react';\nimport Styles from './Layout.module.scss';\nimport { H1, P, Hr } from '@tpr/core';\nimport { Info, ArrowButton, ArrowLink } from '@tpr/layout';\n\nconst WoundUpConfirmation = () => {\n  return (\n    <div className={Styles.root}>\n      <div className={Styles.main}>\n        <ArrowLink\n          iconSide=\"left\"\n          pointsTo=\"left\"\n          onClick={() => console.log('Click')}\n          cfg={{ mb: 3 }}\n        />\n        <Info>\n          <div className={Styles.confirmationInfoBox}>\n            <H1>Scheme wound up confirmed</H1>\n            <div>\n              <P cfg={{ my: 4 }}>\n                You confirmed on <b>9 July 2020</b> that your scheme has now\n                wound up.\n              </P>\n              <P cfg={{ my: 4 }}>Thank you for your time and co-operation.</P>\n            </div>\n          </div>\n        </Info>\n        <div>\n          <ArrowButton\n            title=\"Return to My Schemes\"\n            iconSide=\"right\"\n            pointsTo=\"right\"\n            cfg={{ mr: 4, mt: 7 }}\n            onClick={() => {\n              window.location.href =\n                'https://exchange.thepensionsregulator.gov.uk/Members/SchemeListing.aspx';\n            }}\n          ></ArrowButton>\n        </div>\n        <Hr cfg={{ my: 4 }} />\n        <div className={Styles.backToTop}>\n          <ArrowLink\n            iconSide=\"left\"\n            pointsTo=\"up\"\n            onClick={() => console.log('clicked')}\n            cfg={{ mr: 3 }}\n            title=\"Back to top\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WoundUpConfirmation;\n","import React from 'react';\nimport { ArrowLink, WarningBox, ArrowButton } from '@tpr/layout';\nimport { H1, Hr, P, Link } from '@tpr/core';\nimport { Form, FieldProps, renderFields, validate } from '@tpr/forms';\nimport Styles from './Layout.module.scss';\nimport { useHistory } from 'react-router-dom';\n\nconst SchemeWoundUp = () => {\n  const history = useHistory();\n  const onSubmit = () =>\n    history.push('/initial-questions/scheme-wound-up/wound-up-confirmation');\n  const FIELD_NAME = 'windUpDate';\n  const fields: FieldProps[] = [\n    {\n      name: FIELD_NAME,\n      type: 'date',\n      label: 'When did winding up of the scheme finish?',\n      hint: 'For example, 31 3 2019 or 31 03 2019',\n      error: 'Date is required',\n      required: true,\n      cfg: { mb: 6 },\n    },\n  ];\n  return (\n    <div className={Styles.root}>\n      <div className={Styles.main}>\n        <ArrowLink\n          iconSide=\"left\"\n          pointsTo=\"left\"\n          onClick={() => history.push('/initial-questions')}\n        />\n        <H1 cfg={{ mb: 8 }}>Scheme wound up</H1>\n        <Hr cfg={{ mb: 8 }} />\n        <P cfg={{ mb: 4 }}>\n          If this scheme has wound up, you don't need to complete a scheme\n          return.\n        </P>\n        <Form onSubmit={onSubmit} validate={validate(fields)}>\n          {({ handleSubmit }) => (\n            <form onSubmit={handleSubmit}>\n              {renderFields(fields)}\n              <div className={Styles.warningBox}>\n                <WarningBox>\n                  <P cfg={{ my: 3 }}>\n                    <b>Are you sure this scheme has wound up?</b>\n                  </P>\n                  <P cfg={{ mb: 4 }}>\n                    Choosing 'Confirm' will update the details we hold about\n                    this scheme and will remove it from your list of schemes.\n                    You'll no longer be able to access it. You may want to{' '}\n                    <Link underline>save or print previous scheme returns</Link>\n                    for your records.\n                  </P>\n                  <div>\n                    <ArrowButton\n                      type=\"submit\"\n                      intent=\"danger\"\n                      title=\"Confirm\"\n                      pointsTo=\"right\"\n                      iconSide=\"right\"\n                      cfg={{ mr: 4 }}\n                    />\n                    <Link\n                      underline\n                      onClick={() => history.push('/initial-questions')}\n                    >\n                      Cancel\n                    </Link>\n                  </div>\n                </WarningBox>\n              </div>\n            </form>\n          )}\n        </Form>\n        <div className={Styles.backToTop}>\n          <ArrowLink\n            iconSide=\"left\"\n            pointsTo=\"up\"\n            onClick={() => console.log('clicked')}\n            cfg={{ mr: 3 }}\n            title=\"Back to top\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SchemeWoundUp;\n","import React from 'react';\nimport { Header, Footer, Highlight, BetaHeader } from '@tpr/layout';\nimport { Route, Switch } from 'react-router-dom';\nimport HomePage from './views/Home';\nimport Typography from './views/Typography';\nimport About from './views/About';\nimport InitialQuestions from './views/InitialQuestions';\nimport WoundUpConfirmation from './views/WoundUpConfirmation';\nimport SchemeWoundUp from './views/SchemeWoundUp';\n\nfunction App() {\n  console.warn(process.env.PUBLIC_URL);\n  return (\n    <div>\n      <BetaHeader text=\"This is a new service - your feedback will help us improve it.\" />\n      <Header\n        logoUrl={\n          'https://www.thepensionsregulator.gov.uk/-/media/thepensionsregulator/images/logo/tpr-logo-header.ashx'\n        }\n        title={'Scheme Return'}\n        onClickSchemeOptions={() => {\n          console.log('Scheme Options clicked');\n        }}\n        onClickLogout={() => {\n          console.log('Logout clicked');\n        }}\n      />\n      <Highlight name={'Scheme Name: The Best Pension Scheme'} psr={'012161'} />\n      <Switch>\n        <Route exact path=\"/\" component={() => <HomePage />} />\n        <Route path=\"/typography\" component={() => <Typography />} />\n        <Route path=\"/about\" component={() => <About />} />\n        <Route\n          exact\n          path=\"/initial-questions\"\n          component={() => <InitialQuestions />}\n        />\n        <Route\n          path=\"/initial-questions/scheme-wound-up/wound-up-confirmation\"\n          component={() => <WoundUpConfirmation />}\n        />\n        <Route\n          exact\n          path=\"/initial-questions/scheme-wound-up\"\n          component={() => <SchemeWoundUp />}\n        />\n      </Switch>\n      <Footer\n        logoUrl=\"https://www.thepensionsregulator.gov.uk/-/media/thepensionsregulator/images/logo/tpr-logo-footer.ashx\"\n        onLinkClickHandler={(url) => console.log(`navigate to ${url}`)}\n        links={[\n          {\n            title: 'Accessibility',\n            url:\n              'https://www.thepensionsregulator.gov.uk/en/website-policies/accessibility-statement',\n          },\n          {\n            title: 'Contact Us',\n            url: 'https://www.thepensionsregulator.gov.uk/en/contact-us',\n          },\n          {\n            title: 'Website Policies',\n            url: 'https://www.thepensionsregulator.gov.uk/en/website-policies',\n          },\n        ]}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.module.scss';\nimport ThemeProvider from '@tpr/theming';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider>\n      <Router basename={`${process.env.PUBLIC_URL}`}>\n        <App />\n      </Router>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}